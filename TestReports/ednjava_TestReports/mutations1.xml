<?xml version="1.0" encoding="UTF-8"?>
<mutations partial="true">
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parser$Config;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>25</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>28</index></indexes><blocks><block>7</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>25</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>28</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>45</index></indexes><blocks><block>11</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>56</index></indexes><blocks><block>14</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>67</index></indexes><blocks><block>17</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>78</index></indexes><blocks><block>20</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>89</index></indexes><blocks><block>23</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>100</index></indexes><blocks><block>26</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>34</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>replaced char return with 0 for us/bpsm/edn/parser/ScannerImpl::charForName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>49</index></indexes><blocks><block>12</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced char return with 0 for us/bpsm/edn/parser/ScannerImpl::charForName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>60</index></indexes><blocks><block>15</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced char return with 0 for us/bpsm/edn/parser/ScannerImpl::charForName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>71</index></indexes><blocks><block>18</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced char return with 0 for us/bpsm/edn/parser/ScannerImpl::charForName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>82</index></indexes><blocks><block>21</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests></succeedingTests><description>replaced char return with 0 for us/bpsm/edn/parser/ScannerImpl::charForName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>93</index></indexes><blocks><block>24</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced char return with 0 for us/bpsm/edn/parser/ScannerImpl::charForName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>charForName</mutatedMethod><methodDescription>(Ljava/lang/String;)C</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>104</index></indexes><blocks><block>27</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>replaced char return with 0 for us/bpsm/edn/parser/ScannerImpl::charForName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>makeSymbol</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;II)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>57</index></indexes><blocks><block>17</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>makeSymbol</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;II)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>96</index></indexes><blocks><block>29</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>makeSymbol</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;II)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>makeSymbol</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;II)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>16</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>makeSymbol</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;II)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>20</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>makeSymbol</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;II)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>10</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::makeSymbol</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>makeSymbol</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;II)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>46</index></indexes><blocks><block>15</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::makeSymbol</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>makeSymbol</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;II)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>60</index></indexes><blocks><block>19</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::makeSymbol</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>makeSymbol</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;II)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>100</index></indexes><blocks><block>31</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::makeSymbol</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::nextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readCharacterLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)C</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readCharacterLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)C</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>28</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readCharacterLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)C</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>31</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readCharacterLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)C</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>67</index></indexes><blocks><block>13</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readCharacterLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)C</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>71</index></indexes><blocks><block>15</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readCharacterLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)C</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>84</index></indexes><blocks><block>18</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readCharacterLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)C</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>90</index></indexes><blocks><block>20</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</succeedingTests><description>replaced char return with 0 for us/bpsm/edn/parser/ScannerImpl::readCharacterLiteral</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readCharacterLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)C</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>97</index></indexes><blocks><block>23</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced char return with 0 for us/bpsm/edn/parser/ScannerImpl::readCharacterLiteral</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readHashDispatched</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>22</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readHashDispatched</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readHashDispatched</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>27</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readHashDispatched</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readHashDispatched</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>32</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readHashDispatched</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readHashDispatched</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>41</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readHashDispatched</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readKeyword</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Lus/bpsm/edn/Keyword;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readKeyword</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Lus/bpsm/edn/Keyword;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>25</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readKeyword</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>382</index></indexes><blocks><block>99</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>386</index></indexes><blocks><block>101</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>29</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>64</index></indexes><blocks><block>15</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>68</index></indexes><blocks><block>17</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>74</index></indexes><blocks><block>18</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>77</index></indexes><blocks><block>19</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='41'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>80</index></indexes><blocks><block>20</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='40'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>83</index></indexes><blocks><block>21</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>89</index></indexes><blocks><block>22</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>107</index></indexes><blocks><block>25</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>111</index></indexes><blocks><block>27</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>117</index></indexes><blocks><block>28</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>120</index></indexes><blocks><block>29</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>138</index></indexes><blocks><block>32</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>155</index></indexes><blocks><block>35</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>158</index></indexes><blocks><block>36</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>162</index></indexes><blocks><block>38</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>202</index></indexes><blocks><block>48</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>206</index></indexes><blocks><block>50</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>212</index></indexes><blocks><block>51</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>224</index></indexes><blocks><block>54</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>235</index></indexes><blocks><block>57</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>239</index></indexes><blocks><block>59</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>272</index></indexes><blocks><block>68</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>310</index></indexes><blocks><block>78</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>322</index></indexes><blocks><block>81</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>333</index></indexes><blocks><block>84</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>337</index></indexes><blocks><block>86</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='36'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>378</index></indexes><blocks><block>97</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>382</index></indexes><blocks><block>99</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>386</index></indexes><blocks><block>101</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>288</index></indexes><blocks><block>72</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>304</index></indexes><blocks><block>77</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>395</index></indexes><blocks><block>103</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='33'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>406</index></indexes><blocks><block>107</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readStringLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/String;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>226</index></indexes><blocks><block>43</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readStringLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/String;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>215</index></indexes><blocks><block>42</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readStringLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/String;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>217</index></indexes><blocks><block>42</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readStringLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/String;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>142</index></indexes><blocks><block>28</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readStringLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>198</index></indexes><blocks><block>39</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readStringLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/String;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>226</index></indexes><blocks><block>43</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readStringLiteral</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/String;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>34</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/parser/ScannerImpl::readStringLiteral</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='28'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbol</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><indexes><index>40</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbol</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbol</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>37</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbol</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>63</index></indexes><blocks><block>10</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='49'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbol</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>67</index></indexes><blocks><block>12</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbol</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>81</index></indexes><blocks><block>14</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to us/bpsm/edn/parser/ScannerImpl::validateUseOfSlash</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='45'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbol</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>89</index></indexes><blocks><block>16</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readSymbol</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbol</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readSymbol</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbolOrFalse</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbolOrFalse</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>22</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readSymbolOrFalse</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbolOrNil</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbolOrNil</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>21</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readSymbolOrNil</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbolOrNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbolOrNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>30</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbolOrNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readSymbolOrNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbolOrNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>37</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readSymbolOrNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbolOrNumber</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>45</index></indexes><blocks><block>10</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readSymbolOrNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbolOrTrue</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>readSymbolOrTrue</mutatedMethod><methodDescription>(ILus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>22</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::readSymbolOrTrue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>removed call to us/bpsm/edn/parser/ScannerImpl::skipWhitespaceAndComments</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>19</index></indexes><blocks><block>3</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>27</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>35</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>43</index></indexes><blocks><block>9</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>51</index></indexes><blocks><block>11</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>59</index></indexes><blocks><block>13</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>67</index></indexes><blocks><block>15</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>75</index></indexes><blocks><block>17</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>83</index></indexes><blocks><block>19</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>91</index></indexes><blocks><block>21</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>98</index></indexes><blocks><block>23</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>106</index></indexes><blocks><block>25</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>111</index></indexes><blocks><block>26</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>116</index></indexes><blocks><block>27</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>121</index></indexes><blocks><block>28</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>126</index></indexes><blocks><block>29</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>131</index></indexes><blocks><block>30</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>136</index></indexes><blocks><block>31</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>143</index></indexes><blocks><block>33</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>150</index></indexes><blocks><block>35</block></blocks><killingTests>us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>scanNextToken</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>158</index></indexes><blocks><block>38</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::scanNextToken</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>skipComment</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>skipComment</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>skipComment</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>17</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>skipWhitespace</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)V</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='109'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>skipWhitespace</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)V</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>15</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>skipWhitespaceAndComments</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>16</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>skipWhitespaceAndComments</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)V</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>removed call to us/bpsm/edn/parser/ScannerImpl::skipWhitespace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>skipWhitespaceAndComments</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>31</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/parser/ScannerImpl::skipComment</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>unread</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;I)Lus/bpsm/edn/parser/Parseable;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>removed call to us/bpsm/edn/parser/Parseable::unread</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>unread</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;I)Lus/bpsm/edn/parser/Parseable;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ScannerImpl::unread</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='33'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>123</index></indexes><blocks><block>34</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>30</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>101</index></indexes><blocks><block>29</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>106</index></indexes><blocks><block>30</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='53'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>17</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>23</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>31</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>55</index></indexes><blocks><block>16</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>80</index></indexes><blocks><block>23</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>86</index></indexes><blocks><block>25</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>102</index></indexes><blocks><block>29</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>109</index></indexes><blocks><block>31</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='33'><sourceFile>ScannerImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ScannerImpl</mutatedClass><mutatedMethod>validateUseOfSlash</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;II)V</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>123</index></indexes><blocks><block>34</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>calendarToString</mutatedMethod><methodDescription>(Ljava/util/GregorianCalendar;)Ljava/lang/String;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>38</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>calendarToString</mutatedMethod><methodDescription>(Ljava/util/GregorianCalendar;)Ljava/lang/String;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>47</index></indexes><blocks><block>11</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>calendarToString</mutatedMethod><methodDescription>(Ljava/util/GregorianCalendar;)Ljava/lang/String;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>51</index></indexes><blocks><block>14</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/parser/InstantUtils::calendarToString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>dateToString</mutatedMethod><methodDescription>(Ljava/util/Date;)Ljava/lang/String;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>40</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>dateToString</mutatedMethod><methodDescription>(Ljava/util/Date;)Ljava/lang/String;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/util/GregorianCalendar::setTime</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>dateToString</mutatedMethod><methodDescription>(Ljava/util/Date;)Ljava/lang/String;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>47</index></indexes><blocks><block>14</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/parser/InstantUtils::dateToString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>daysInMonth</mutatedMethod><methodDescription>(IZ)I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>daysInMonth</mutatedMethod><methodDescription>(IZ)I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>16</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>daysInMonth</mutatedMethod><methodDescription>(IZ)I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>17</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>daysInMonth</mutatedMethod><methodDescription>(IZ)I</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>8</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>daysInMonth</mutatedMethod><methodDescription>(IZ)I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>24</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/InstantUtils::daysInMonth</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>getTimeZone</mutatedMethod><methodDescription>(III)Ljava/util/TimeZone;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>getTimeZone</mutatedMethod><methodDescription>(III)Ljava/util/TimeZone;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>getTimeZone</mutatedMethod><methodDescription>(III)Ljava/util/TimeZone;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>41</index></indexes><blocks><block>6</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>getTimeZone</mutatedMethod><methodDescription>(III)Ljava/util/TimeZone;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>20</index></indexes><blocks><block>5</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>getTimeZone</mutatedMethod><methodDescription>(III)Ljava/util/TimeZone;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>22</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>getTimeZone</mutatedMethod><methodDescription>(III)Ljava/util/TimeZone;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>getTimeZone</mutatedMethod><methodDescription>(III)Ljava/util/TimeZone;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>getTimeZone</mutatedMethod><methodDescription>(III)Ljava/util/TimeZone;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>getTimeZone</mutatedMethod><methodDescription>(III)Ljava/util/TimeZone;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>41</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>getTimeZone</mutatedMethod><methodDescription>(III)Ljava/util/TimeZone;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>29</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/InstantUtils::getTimeZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>getTimeZone</mutatedMethod><methodDescription>(III)Ljava/util/TimeZone;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>74</index></indexes><blocks><block>13</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/InstantUtils::getTimeZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced boolean return with false for us/bpsm/edn/parser/InstantUtils::isLeapYear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>22</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/InstantUtils::isLeapYear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeCalendar</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/util/GregorianCalendar;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>32</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeCalendar</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/util/GregorianCalendar;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>67</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeCalendar</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/util/GregorianCalendar;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>24</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to java/util/GregorianCalendar::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeCalendar</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/util/GregorianCalendar;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>33</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to java/util/GregorianCalendar::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeCalendar</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/util/GregorianCalendar;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>40</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to java/util/GregorianCalendar::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeCalendar</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/util/GregorianCalendar;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>47</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to java/util/GregorianCalendar::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeCalendar</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/util/GregorianCalendar;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>54</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to java/util/GregorianCalendar::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeCalendar</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/util/GregorianCalendar;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>61</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to java/util/GregorianCalendar::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeCalendar</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/util/GregorianCalendar;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>74</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to java/util/GregorianCalendar::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeCalendar</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/util/GregorianCalendar;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>78</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/InstantUtils::makeCalendar</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeDate</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/util/Date;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/InstantUtils::makeDate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeTimestamp</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/sql/Timestamp;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeTimestamp</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/sql/Timestamp;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>15</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>Replaced long multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeTimestamp</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/sql/Timestamp;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>23</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/sql/Timestamp::setNanos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>makeTimestamp</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/sql/Timestamp;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>27</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/InstantUtils::makeTimestamp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>109</index></indexes><blocks><block>29</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>112</index></indexes><blocks><block>30</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>146</index></indexes><blocks><block>35</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>152</index></indexes><blocks><block>38</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>185</index></indexes><blocks><block>43</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>188</index></indexes><blocks><block>44</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>221</index></indexes><blocks><block>49</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>224</index></indexes><blocks><block>50</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>257</index></indexes><blocks><block>55</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>269</index></indexes><blocks><block>59</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>341</index></indexes><blocks><block>74</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>344</index></indexes><blocks><block>75</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>377</index></indexes><blocks><block>80</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>380</index></indexes><blocks><block>81</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>109</index></indexes><blocks><block>29</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>112</index></indexes><blocks><block>30</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>146</index></indexes><blocks><block>35</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>152</index></indexes><blocks><block>38</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>185</index></indexes><blocks><block>43</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>188</index></indexes><blocks><block>44</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>221</index></indexes><blocks><block>49</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>224</index></indexes><blocks><block>50</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>257</index></indexes><blocks><block>55</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>260</index></indexes><blocks><block>56</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>269</index></indexes><blocks><block>59</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>341</index></indexes><blocks><block>74</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>344</index></indexes><blocks><block>75</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>377</index></indexes><blocks><block>80</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>380</index></indexes><blocks><block>81</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/parser/ParsedInstant;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>429</index></indexes><blocks><block>87</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/InstantUtils::parse</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parseIntOrElse</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parseIntOrElse</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/InstantUtils::parseIntOrElse</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parseIntOrElse</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>14</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/InstantUtils::parseIntOrElse</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parseNanoseconds</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>15</index></indexes><blocks><block>3</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParseNanoseconds(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parseNanoseconds</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParseNanoseconds(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parseNanoseconds</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>15</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParseNanoseconds(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parseNanoseconds</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>30</index></indexes><blocks><block>11</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParseNanoseconds(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/InstantUtils::parseNanoseconds</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parseNanoseconds</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>36</index></indexes><blocks><block>13</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParseNanoseconds(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)</succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/InstantUtils::parseNanoseconds</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parseOffsetSign</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parseOffsetSign</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>15</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>parseOffsetSign</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>23</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testExtragrammaticalVerificationAfterParse(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testDate(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.parser.InstantUtilsTest.testCalendar(us.bpsm.edn.parser.InstantUtilsTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/InstantUtils::parseOffsetSign</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils</mutatedClass><mutatedMethod>timestampToString</mutatedMethod><methodDescription>(Ljava/sql/Timestamp;)Ljava/lang/String;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>28</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/parser/InstantUtils::timestampToString</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='48'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkArguments</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkArguments</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>16</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkArguments</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>34</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkArguments</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>29</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to us/bpsm/edn/Symbol::checkName</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkArguments</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>39</index></indexes><blocks><block>9</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to us/bpsm/edn/Symbol::checkName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>104</index></indexes><blocks><block>32</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>200</index></indexes><blocks><block>64</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><indexes><index>195</index></indexes><blocks><block>63</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>36</index></indexes><blocks><block>10</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>65</index></indexes><blocks><block>20</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='49'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>94</index></indexes><blocks><block>29</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>97</index></indexes><blocks><block>30</block></blocks><killingTests>us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>104</index></indexes><blocks><block>32</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>109</index></indexes><blocks><block>35</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='39'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>156</index></indexes><blocks><block>49</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>checkName</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>200</index></indexes><blocks><block>64</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lus/bpsm/edn/Symbol;)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lus/bpsm/edn/Symbol;)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>24</index></indexes><blocks><block>4</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/Symbol::compareTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>26</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>44</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>54</index></indexes><blocks><block>11</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>59</index></indexes><blocks><block>12</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>72</index></indexes><blocks><block>15</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for us/bpsm/edn/Symbol::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>81</index></indexes><blocks><block>17</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>replaced boolean return with false for us/bpsm/edn/Symbol::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/Symbol::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>30</index></indexes><blocks><block>7</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/Symbol::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>48</index></indexes><blocks><block>10</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>replaced boolean return with true for us/bpsm/edn/Symbol::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>63</index></indexes><blocks><block>13</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/Symbol::equals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>76</index></indexes><blocks><block>16</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>replaced boolean return with true for us/bpsm/edn/Symbol::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/Symbol::getName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/Symbol::getPrefix</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='111'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>13</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='111'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='111'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>24</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='111'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>28</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='111'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>34</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='111'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>47</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='111'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>37</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='111'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>52</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>replaced int return with 0 for us/bpsm/edn/Symbol::hashCode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>newSymbol</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>replaced return value with null for us/bpsm/edn/Symbol::newSymbol</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>newSymbol</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to us/bpsm/edn/Symbol::checkArguments</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>newSymbol</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lus/bpsm/edn/Symbol;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>replaced return value with null for us/bpsm/edn/Symbol::newSymbol</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>11</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/Symbol::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Symbol.java</sourceFile><mutatedClass>us.bpsm.edn.Symbol</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>27</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/Symbol::toString</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>26</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>43</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>55</index></indexes><blocks><block>10</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>67</index></indexes><blocks><block>12</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>79</index></indexes><blocks><block>14</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>91</index></indexes><blocks><block>16</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>103</index></indexes><blocks><block>18</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>115</index></indexes><blocks><block>20</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>127</index></indexes><blocks><block>22</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>139</index></indexes><blocks><block>24</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>151</index></indexes><blocks><block>26</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>160</index></indexes><blocks><block>28</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testParse(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>30</index></indexes><blocks><block>7</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>47</index></indexes><blocks><block>9</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>59</index></indexes><blocks><block>11</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>71</index></indexes><blocks><block>13</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>83</index></indexes><blocks><block>15</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>95</index></indexes><blocks><block>17</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>107</index></indexes><blocks><block>19</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>119</index></indexes><blocks><block>21</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>131</index></indexes><blocks><block>23</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>143</index></indexes><blocks><block>25</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>155</index></indexes><blocks><block>27</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/ParsedInstant::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>13</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>16</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>22</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>25</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>31</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>34</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>40</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>43</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>49</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>52</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>58</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>61</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>67</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>70</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>76</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>79</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>85</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>88</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>94</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>97</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>102</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/ParsedInstant::hashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>56</index></indexes><blocks><block>7</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>56</index></indexes><blocks><block>7</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParsedInstant.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParsedInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>80</index></indexes><blocks><block>13</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/parser/ParsedInstant::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>defaultPrinterProtocol</mutatedMethod><methodDescription>()Lus/bpsm/edn/protocols/Protocol;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::defaultPrinterProtocol</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>defaultProtocolBuilder</mutatedMethod><methodDescription>()Lus/bpsm/edn/protocols/Protocol$Builder;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>122</index></indexes><blocks><block>47</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::defaultProtocolBuilder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>getClassOrNull</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Class;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>getClassOrNull</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Class;</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::getClassOrNull</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>newPrinter</mutatedMethod><methodDescription>(Ljava/lang/Appendable;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::newPrinter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>newPrinter</mutatedMethod><methodDescription>(Lus/bpsm/edn/protocols/Protocol;Ljava/lang/Appendable;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::newPrinter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>prettyPrinterProtocol</mutatedMethod><methodDescription>()Lus/bpsm/edn/protocols/Protocol;</methodDescription><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::prettyPrinterProtocol</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>prettyProtocolBuilder</mutatedMethod><methodDescription>()Lus/bpsm/edn/protocols/Protocol$Builder;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>21</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::prettyProtocolBuilder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>prettyWriteListFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::prettyWriteListFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>prettyWriteMapFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::prettyWriteMapFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>prettyWriteSetFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::prettyWriteSetFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>printString</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/printer/Printers::printString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>printString</mutatedMethod><methodDescription>(Lus/bpsm/edn/protocols/Protocol;Ljava/lang/Object;)Ljava/lang/String;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>19</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/printer/Printers::printString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>runIndented</mutatedMethod><methodDescription>(Ljava/lang/Runnable;)V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>29</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>runIndented</mutatedMethod><methodDescription>(Ljava/lang/Runnable;)V</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>59</index></indexes><blocks><block>15</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>runIndented</mutatedMethod><methodDescription>(Ljava/lang/Runnable;)V</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>105</index><index>92</index></indexes><blocks><block>22</block><block>23</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>runIndented</mutatedMethod><methodDescription>(Ljava/lang/Runnable;)V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>31</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>runIndented</mutatedMethod><methodDescription>(Ljava/lang/Runnable;)V</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>79</index></indexes><blocks><block>20</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Runnable::run</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>withPretty</mutatedMethod><methodDescription>(Ljava/lang/Runnable;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>withPretty</mutatedMethod><methodDescription>(Ljava/lang/Runnable;)V</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>withPretty</mutatedMethod><methodDescription>(Ljava/lang/Runnable;)V</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>24</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/ThreadLocal::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>withPretty</mutatedMethod><methodDescription>(Ljava/lang/Runnable;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>28</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Runnable::run</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>withPretty</mutatedMethod><methodDescription>(Ljava/lang/Runnable;)V</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>38</index><index>47</index></indexes><blocks><block>9</block><block>11</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to java/lang/ThreadLocal::remove</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>withPretty</mutatedMethod><methodDescription>(Ljava/lang/Runnable;)V</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>55</index></indexes><blocks><block>13</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/lang/Runnable::run</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeBigDecimalFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeBigDecimalFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeBigIntegerFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeBigIntegerFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeBooleanFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeBooleanFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeCalendarFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeCalendarFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeCharSequenceFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeCharSequenceFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeCharacterFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeCharacterFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeDateFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeDateFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeDoubleValueFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeDoubleValueFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeKeywordFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeKeywordFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeListFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeListFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeLongValueFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeLongValueFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeMapFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeMapFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeNullFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeNullFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeSetFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeSetFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeSymbolFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeSymbolFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeTagFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeTagFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeTaggedValueFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeTaggedValueFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeTimestampFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeTimestampFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers</mutatedClass><mutatedMethod>writeUuidFn</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer$Fn;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers::writeUuidFn</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>27</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>15</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>40</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='44'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>15</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;)Ljava/lang/Object;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>33</index></indexes><blocks><block>8</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>104</index></indexes><blocks><block>19</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>186</index></indexes><blocks><block>39</block></blocks><killingTests>us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>36</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>52</index></indexes><blocks><block>10</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>68</index></indexes><blocks><block>13</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>84</index></indexes><blocks><block>16</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>141</index></indexes><blocks><block>28</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>156</index></indexes><blocks><block>31</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>166</index></indexes><blocks><block>33</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>195</index></indexes><blocks><block>41</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>nextValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>200</index></indexes><blocks><block>42</block></blocks><killingTests>us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl::nextValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>parseIntoCollection</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;Lus/bpsm/edn/parser/Token;Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>parseIntoCollection</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;Lus/bpsm/edn/parser/Token;Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>29</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>parseIntoCollection</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;Lus/bpsm/edn/parser/Token;Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>55</index></indexes><blocks><block>14</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>parseIntoCollection</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;Lus/bpsm/edn/parser/Token;Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>74</index></indexes><blocks><block>18</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='23'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>parseIntoCollection</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;Lus/bpsm/edn/parser/Token;Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>78</index></indexes><blocks><block>19</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='26'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>parseIntoCollection</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;Lus/bpsm/edn/parser/Token;Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/Object;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>60</index></indexes><blocks><block>15</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to us/bpsm/edn/parser/CollectionBuilder::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>parseNamespaceName</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/String;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>41</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>parseNamespaceName</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/String;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>parseNamespaceName</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/String;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>41</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl</mutatedClass><mutatedMethod>parseNamespaceName</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parseable;Z)Ljava/lang/String;</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>68</index></indexes><blocks><block>16</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/parser/ParserImpl::parseNamespaceName</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>26</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>44</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>54</index></indexes><blocks><block>11</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>59</index></indexes><blocks><block>12</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>72</index></indexes><blocks><block>15</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for us/bpsm/edn/TaggedValue::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>81</index></indexes><blocks><block>17</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for us/bpsm/edn/TaggedValue::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/TaggedValue::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>30</index></indexes><blocks><block>7</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/TaggedValue::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>48</index></indexes><blocks><block>10</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/TaggedValue::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>63</index></indexes><blocks><block>13</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/TaggedValue::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>76</index></indexes><blocks><block>16</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/TaggedValue::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>getTag</mutatedMethod><methodDescription>()Lus/bpsm/edn/Tag;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/TaggedValue::getTag</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/TaggedValue::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>13</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>17</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>23</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>36</index></indexes><blocks><block>4</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>26</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>41</index></indexes><blocks><block>4</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/TaggedValue::hashCode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>newTaggedValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Ljava/lang/Object;)Lus/bpsm/edn/TaggedValue;</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>newTaggedValue</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Ljava/lang/Object;)Lus/bpsm/edn/TaggedValue;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>20</index></indexes><blocks><block>4</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/TaggedValue::newTaggedValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>TaggedValue.java</sourceFile><mutatedClass>us.bpsm.edn.TaggedValue</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>15</index></indexes><blocks><block>5</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/TaggedValue::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>allAreEmpty</mutatedMethod><methodDescription>(Ljava/util/List;)Z</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>allAreEmpty</mutatedMethod><methodDescription>(Ljava/util/List;)Z</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>31</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for us/bpsm/edn/protocols/C3::allAreEmpty</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>allAreEmpty</mutatedMethod><methodDescription>(Ljava/util/List;)Z</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>21</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/protocols/C3::allAreEmpty</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>asList</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/util/List;</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with Collections.emptyList for us/bpsm/edn/protocols/C3::asList</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>findCandidate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/lang/Class;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>findCandidate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/lang/Class;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>23</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>findCandidate</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/lang/Class;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>30</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/protocols/C3::findCandidate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>19</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>43</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>37</index></indexes><blocks><block>7</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/protocols/C3::removeCandidate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>47</index></indexes><blocks><block>10</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for us/bpsm/edn/protocols/C3::merge</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>methodResolutionOrder</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/util/List;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>methodResolutionOrder</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/util/List;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>54</index></indexes><blocks><block>12</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>methodResolutionOrder</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/util/List;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>22</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for us/bpsm/edn/protocols/C3::methodResolutionOrder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>mro</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/util/List;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>55</index></indexes><blocks><block>14</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for us/bpsm/edn/protocols/C3::mro</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>occursInSomeTail</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/Object;)Z</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>41</index></indexes><blocks><block>10</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>occursInSomeTail</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/Object;)Z</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>27</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>occursInSomeTail</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/Object;)Z</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>41</index></indexes><blocks><block>10</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>occursInSomeTail</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/Object;)Z</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>31</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced boolean return with false for us/bpsm/edn/protocols/C3::occursInSomeTail</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>occursInSomeTail</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/Object;)Z</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>51</index></indexes><blocks><block>13</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/protocols/C3::occursInSomeTail</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>removeCandidate</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/Class;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>17</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>removeCandidate</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/lang/Class;)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>23</index></indexes><blocks><block>7</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>supers</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/util/List;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>20</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>supers</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/util/List;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>23</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>C3.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.C3</mutatedClass><mutatedMethod>supers</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/util/List;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>64</index></indexes><blocks><block>11</block></blocks><killingTests>us.bpsm.edn.protocols.C3Test.objectIsFinalInOrder(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testArrayList(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample2(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample4OrderDisagreement(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample1(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.protocols.C3Test.testMroExample3(us.bpsm.edn.protocols.C3Test)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for us/bpsm/edn/protocols/C3::supers</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lus/bpsm/edn/Symbol;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/Tag::compareTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>14</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>26</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>41</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>46</index></indexes><blocks><block>9</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>59</index></indexes><blocks><block>12</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for us/bpsm/edn/Tag::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>68</index></indexes><blocks><block>14</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for us/bpsm/edn/Tag::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/Tag::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>30</index></indexes><blocks><block>7</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/Tag::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>50</index></indexes><blocks><block>10</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/Tag::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>63</index></indexes><blocks><block>13</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/Tag::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/Tag::getName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/Tag::getPrefix</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='110'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>13</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>26</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>16</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>31</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>replaced int return with 0 for us/bpsm/edn/Tag::hashCode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>newTag</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/Tag;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/Tag::newTag</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>newTag</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lus/bpsm/edn/Tag;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)</killingTests><succeedingTests>us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/Tag::newTag</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>newTag</mutatedMethod><methodDescription>(Lus/bpsm/edn/Symbol;)Lus/bpsm/edn/Tag;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/Tag::newTag</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Tag.java</sourceFile><mutatedClass>us.bpsm.edn.Tag</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>12</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/Tag::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(C)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>34</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers$1::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>9</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>16</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>append</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>41</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers$1::append</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to java/io/Closeable::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>printValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>15</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>printValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>47</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printer$Fn::eval</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>printValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>51</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers$1::printValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>softspace</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$1</mutatedClass><mutatedMethod>softspace</mutatedMethod><methodDescription>()Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>12</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/Printers$1::softspace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>25</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lus/bpsm/edn/protocols/Protocol;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lus/bpsm/edn/protocols/Protocol;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>22</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/protocols/Protocols$ProtocolImpl::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>lookup</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/lang/Object;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>lookup</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/lang/Object;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>28</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>lookup</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/lang/Object;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>61</index></indexes><blocks><block>11</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>lookup</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/lang/Object;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/protocols/Protocols$ProtocolImpl::lookup</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>lookup</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/lang/Object;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>35</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/protocols/Protocols$ProtocolImpl::lookup</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>lookup</mutatedMethod><methodDescription>(Ljava/lang/Class;)Ljava/lang/Object;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>76</index></indexes><blocks><block>13</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/protocols/Protocols$ProtocolImpl::lookup</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>name</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/protocols/Protocols$ProtocolImpl::name</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(Ljava/lang/Class;Ljava/lang/Object;)Lus/bpsm/edn/protocols/Protocol$Builder;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(Ljava/lang/Class;Ljava/lang/Object;)Lus/bpsm/edn/protocols/Protocol$Builder;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>17</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(Ljava/lang/Class;Ljava/lang/Object;)Lus/bpsm/edn/protocols/Protocol$Builder;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>29</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>put</mutatedMethod><methodDescription>(Ljava/lang/Class;Ljava/lang/Object;)Lus/bpsm/edn/protocols/Protocol$Builder;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>51</index></indexes><blocks><block>10</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/protocols/Protocols$ProtocolImpl::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>18</index></indexes><blocks><block>5</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/protocols/Protocols$ProtocolImpl::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols$ProtocolImpl</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>32</index></indexes><blocks><block>10</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/protocols/Protocols$ProtocolImpl::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>acceptUnicodeEscapesInStringLiterals</mutatedMethod><methodDescription>(Z)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/parser/Parsers$4::checkState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>acceptUnicodeEscapesInStringLiterals</mutatedMethod><methodDescription>(Z)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4::acceptUnicodeEscapesInStringLiterals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/Parser$Config;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>removed call to us/bpsm/edn/parser/Parsers$4::checkState</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/Parser$Config;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>16</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>checkState</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>putTagHandler</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Lus/bpsm/edn/parser/TagHandler;)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)</succeedingTests><description>removed call to us/bpsm/edn/parser/Parsers$4::checkState</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>putTagHandler</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Lus/bpsm/edn/parser/TagHandler;)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>16</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4::putTagHandler</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>setListFactory</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/parser/Parsers$4::checkState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>setListFactory</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4::setListFactory</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>setMapFactory</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/parser/Parsers$4::checkState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>setMapFactory</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4::setMapFactory</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>setSetFactory</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)</succeedingTests><description>removed call to us/bpsm/edn/parser/Parsers$4::checkState</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>setSetFactory</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4::setSetFactory</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>setVectorFactory</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/parser/Parsers$4::checkState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4</mutatedClass><mutatedMethod>setVectorFactory</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/CollectionBuilder$Factory;)Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>13</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4::setVectorFactory</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>11</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to java/io/Closeable::close</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>53</index></indexes><blocks><block>9</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>19</index></indexes><blocks><block>3</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>39</index></indexes><blocks><block>5</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>53</index></indexes><blocks><block>9</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>68</index></indexes><blocks><block>13</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>33</index></indexes><blocks><block>4</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/Parsers$3::read</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>43</index></indexes><blocks><block>6</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/Parsers$3::read</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>59</index></indexes><blocks><block>11</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/Parsers$3::read</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>74</index></indexes><blocks><block>15</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/Parsers$3::read</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>84</index></indexes><blocks><block>16</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/Parsers$3::read</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$3</mutatedClass><mutatedMethod>unread</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>32</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/parser/CollectionBuilder::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl$NamespacedMapFactory$NamespacedMapBuilder::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>maybeApplyDefaultNamespace</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>maybeApplyDefaultNamespace</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>maybeApplyDefaultNamespace</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>29</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>maybeApplyDefaultNamespace</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>44</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>maybeApplyDefaultNamespace</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>67</index></indexes><blocks><block>13</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>maybeApplyDefaultNamespace</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>12</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl$NamespacedMapFactory$NamespacedMapBuilder::maybeApplyDefaultNamespace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>maybeApplyDefaultNamespace</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>56</index></indexes><blocks><block>11</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl$NamespacedMapFactory$NamespacedMapBuilder::maybeApplyDefaultNamespace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>maybeApplyDefaultNamespace</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>73</index></indexes><blocks><block>15</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl$NamespacedMapFactory$NamespacedMapBuilder::maybeApplyDefaultNamespace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory$NamespacedMapBuilder</mutatedClass><mutatedMethod>maybeApplyDefaultNamespace</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>92</index></indexes><blocks><block>21</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl$NamespacedMapFactory$NamespacedMapBuilder::maybeApplyDefaultNamespace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>isDigit</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>replaced boolean return with false for us/bpsm/edn/util/CharClassify::isDigit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='82'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>isDigit</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>replaced boolean return with true for us/bpsm/edn/util/CharClassify::isDigit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='113'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>isWhitespace</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>replaced boolean return with false for us/bpsm/edn/util/CharClassify::isWhitespace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='113'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>isWhitespace</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced boolean return with true for us/bpsm/edn/util/CharClassify::isWhitespace</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>separatesTokens</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced boolean return with false for us/bpsm/edn/util/CharClassify::separatesTokens</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>separatesTokens</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced boolean return with true for us/bpsm/edn/util/CharClassify::separatesTokens</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>startsNumber</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for us/bpsm/edn/util/CharClassify::startsNumber</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>startsNumber</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/util/CharClassify::startsNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='52'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>symbolConstituent</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced boolean return with false for us/bpsm/edn/util/CharClassify::symbolConstituent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='52'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>symbolConstituent</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>replaced boolean return with true for us/bpsm/edn/util/CharClassify::symbolConstituent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>symbolStart</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>replaced boolean return with false for us/bpsm/edn/util/CharClassify::symbolStart</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='50'><sourceFile>CharClassify.java</sourceFile><mutatedClass>us.bpsm.edn.util.CharClassify</mutatedClass><mutatedMethod>symbolStart</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced boolean return with true for us/bpsm/edn/util/CharClassify::symbolStart</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='105'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers</mutatedClass><mutatedMethod>defaultConfiguration</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/Parser$Config;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers::defaultConfiguration</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers</mutatedClass><mutatedMethod>defaultTagHandlers</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>52</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>replaced return value with Collections.emptyMap for us/bpsm/edn/parser/Parsers::defaultTagHandlers</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers</mutatedClass><mutatedMethod>emptyBuffer</mutatedMethod><methodDescription>()Ljava/nio/CharBuffer;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>15</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers::emptyBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers</mutatedClass><mutatedMethod>newParseable</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;)Lus/bpsm/edn/parser/Parseable;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers::newParseable</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers</mutatedClass><mutatedMethod>newParseable</mutatedMethod><methodDescription>(Ljava/lang/Readable;)Lus/bpsm/edn/parser/Parseable;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers::newParseable</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='49'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers</mutatedClass><mutatedMethod>newParser</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/Parser$Config;)Lus/bpsm/edn/parser/Parser;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>11</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers::newParser</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers</mutatedClass><mutatedMethod>newParserConfigBuilder</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/Parser$Config$Builder;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers::newParserConfigBuilder</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers</mutatedClass><mutatedMethod>readIntoBuffer</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;Ljava/lang/Readable;)Z</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>20</index></indexes><blocks><block>3</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers</mutatedClass><mutatedMethod>readIntoBuffer</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;Ljava/lang/Readable;)Z</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>20</index></indexes><blocks><block>3</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers</mutatedClass><mutatedMethod>readIntoBuffer</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;Ljava/lang/Readable;)Z</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>22</index></indexes><blocks><block>4</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for us/bpsm/edn/parser/Parsers::readIntoBuffer</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers</mutatedClass><mutatedMethod>readIntoBuffer</mutatedMethod><methodDescription>(Ljava/nio/CharBuffer;Ljava/lang/Readable;)Z</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>26</index></indexes><blocks><block>5</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/Parsers::readIntoBuffer</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Keyword.java</sourceFile><mutatedClass>us.bpsm.edn.Keyword</mutatedClass><mutatedMethod>&lt;init&gt;</mutatedMethod><methodDescription>(Lus/bpsm/edn/Symbol;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Keyword.java</sourceFile><mutatedClass>us.bpsm.edn.Keyword</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lus/bpsm/edn/Keyword;)I</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Keyword.java</sourceFile><mutatedClass>us.bpsm.edn.Keyword</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(Lus/bpsm/edn/Keyword;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>18</index></indexes><blocks><block>3</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/Keyword::compareTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Keyword.java</sourceFile><mutatedClass>us.bpsm.edn.Keyword</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/Keyword::getName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Keyword.java</sourceFile><mutatedClass>us.bpsm.edn.Keyword</mutatedClass><mutatedMethod>getPrefix</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/Keyword::getPrefix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Keyword.java</sourceFile><mutatedClass>us.bpsm.edn.Keyword</mutatedClass><mutatedMethod>newKeyword</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/Keyword;</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/Keyword::newKeyword</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Keyword.java</sourceFile><mutatedClass>us.bpsm.edn.Keyword</mutatedClass><mutatedMethod>newKeyword</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Lus/bpsm/edn/Keyword;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/Keyword::newKeyword</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Keyword.java</sourceFile><mutatedClass>us.bpsm.edn.Keyword</mutatedClass><mutatedMethod>newKeyword</mutatedMethod><methodDescription>(Lus/bpsm/edn/Symbol;)Lus/bpsm/edn/Keyword;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>11</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/Keyword::newKeyword</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Keyword.java</sourceFile><mutatedClass>us.bpsm.edn.Keyword</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>12</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/Keyword::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Keyword.java</sourceFile><mutatedClass>us.bpsm.edn.Keyword</mutatedClass><mutatedMethod>writeReplace</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/Keyword::writeReplace</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='21'><sourceFile>Interner.java</sourceFile><mutatedClass>us.bpsm.edn.Interner</mutatedClass><mutatedMethod>clearDeadEntries</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Interner.java</sourceFile><mutatedClass>us.bpsm.edn.Interner</mutatedClass><mutatedMethod>clearDeadEntries</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>16</index></indexes><blocks><block>4</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Interner.java</sourceFile><mutatedClass>us.bpsm.edn.Interner</mutatedClass><mutatedMethod>clearDeadEntries</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>40</index></indexes><blocks><block>10</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Interner.java</sourceFile><mutatedClass>us.bpsm.edn.Interner</mutatedClass><mutatedMethod>clearDeadEntries</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>43</index></indexes><blocks><block>12</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='21'><sourceFile>Interner.java</sourceFile><mutatedClass>us.bpsm.edn.Interner</mutatedClass><mutatedMethod>intern</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>27</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>Interner.java</sourceFile><mutatedClass>us.bpsm.edn.Interner</mutatedClass><mutatedMethod>intern</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>41</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='21'><sourceFile>Interner.java</sourceFile><mutatedClass>us.bpsm.edn.Interner</mutatedClass><mutatedMethod>intern</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to us/bpsm/edn/Interner::clearDeadEntries</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Interner.java</sourceFile><mutatedClass>us.bpsm.edn.Interner</mutatedClass><mutatedMethod>intern</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>31</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/Interner::intern</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>Interner.java</sourceFile><mutatedClass>us.bpsm.edn.Interner</mutatedClass><mutatedMethod>intern</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>45</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>replaced return value with null for us/bpsm/edn/Interner::intern</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4$1</mutatedClass><mutatedMethod>getListFactory</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/CollectionBuilder$Factory;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4$1::getListFactory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4$1</mutatedClass><mutatedMethod>getMapFactory</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/CollectionBuilder$Factory;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4$1::getMapFactory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4$1</mutatedClass><mutatedMethod>getSetFactory</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/CollectionBuilder$Factory;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4$1::getSetFactory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4$1</mutatedClass><mutatedMethod>getTagHandler</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;)Lus/bpsm/edn/parser/TagHandler;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4$1::getTagHandler</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4$1</mutatedClass><mutatedMethod>getVectorFactory</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/CollectionBuilder$Factory;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$4$1::getVectorFactory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4$1</mutatedClass><mutatedMethod>unicodeEscapesInStringLiteralsAreAccepted</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced boolean return with false for us/bpsm/edn/parser/Parsers$4$1::unicodeEscapesInStringLiteralsAreAccepted</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='110'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$4$1</mutatedClass><mutatedMethod>unicodeEscapesInStringLiteralsAreAccepted</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced boolean return with true for us/bpsm/edn/parser/Parsers$4$1::unicodeEscapesInStringLiteralsAreAccepted</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$2</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>10</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='109'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$2</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>14</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/Parsers$2::read</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$2</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>22</index></indexes><blocks><block>2</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/Parsers$2::read</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='110'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$2</mutatedClass><mutatedMethod>unread</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.beginVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endMapOrSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginSet(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.discard(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginMap(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.beginList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsCanBeMultiline(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.simpleStringWithLinebreak(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.emptyString(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapesInStringLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol2(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol3(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.truncatedInputInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.simpleStringEscapes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsSupportJavaStyleEscapes(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.stringsAllowUnicodeEscapesOptionally(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.symbolHasTooManySlashes(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.commaCharacter(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolEndsInSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endList(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.unicodeEscapeCharacterLiterals(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDotDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithDashDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.endVector(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namedCharacters(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolStartsWithPlusDigit(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDoubleColonPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.colonSlashIsNotAValidKeyword(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testFalse(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.symbolWithEmbeddedHashOrColon(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.testNil(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.nilReadsAsNull(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolSlash(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.namespacedSlashIsAValidSymbol(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomLongHandler.test(us.bpsm.edn.examples.CustomLongHandler)|us.bpsm.edn.EdnFormatTest.keywordJustSlashIsIllegal(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.testTrue(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.comment(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.trueAndFalseReadAsBoolean(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.symbolsWithPunctuation(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGlobally(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.commaIsWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.keywordWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.examples.CustomTagHandler.test(us.bpsm.edn.examples.CustomTagHandler)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.symbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.namespacedSymbols(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.characters(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.EdnFormatTest.keywords(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ScannerTest.testEmpty(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.nonDigitInUnicodeEscapeInStringLiteral(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.doubleSlashIfPresentMustEndSymbol1(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordsAreInternedGloballyWithoutPrefix(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.keywordWithDifferentPrefixNotIdentical(us.bpsm.edn.parser.ScannerTest)</succeedingTests><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$21$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>12</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$21$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>557</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>50</index></indexes><blocks><block>8</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$21$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>39</index></indexes><blocks><block>6</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::runIndented</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$21$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>44</index></indexes><blocks><block>7</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::printIndent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>DefaultMapFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultMapFactory$1</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>DefaultMapFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultMapFactory$1</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>20</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>DefaultMapFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultMapFactory$1</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>7</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>DefaultMapFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultMapFactory$1</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>25</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/DefaultMapFactory$1::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>(Ljava/lang/String;)Lus/bpsm/edn/protocols/Protocol$Builder;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/protocols/Protocols::builder</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols</mutatedClass><mutatedMethod>butfirst</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Protocols.java</sourceFile><mutatedClass>us.bpsm.edn.protocols.Protocols</mutatedClass><mutatedMethod>butfirst</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/util/List;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>17</index></indexes><blocks><block>5</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with Collections.emptyList for us/bpsm/edn/protocols/Protocols::butfirst</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils$1</mutatedClass><mutatedMethod>initialValue</mutatedMethod><methodDescription>()Ljava/text/SimpleDateFormat;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>16</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>removed call to java/text/SimpleDateFormat::setTimeZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InstantUtils.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantUtils$1</mutatedClass><mutatedMethod>initialValue</mutatedMethod><methodDescription>()Ljava/text/SimpleDateFormat;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>20</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.parser.InstantUtilsTest.testTimestamp(us.bpsm.edn.parser.InstantUtilsTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/InstantUtils$1::initialValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractInstantHandler.java</sourceFile><mutatedClass>us.bpsm.edn.parser.AbstractInstantHandler</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractInstantHandler.java</sourceFile><mutatedClass>us.bpsm.edn.parser.AbstractInstantHandler</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>29</index></indexes><blocks><block>10</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/AbstractInstantHandler::transform</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$22$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>25</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::runIndented</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$22$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>30</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::printIndent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$3</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/util/List;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$3</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/util/List;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>47</index></indexes><blocks><block>11</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testDefaultPrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$10</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><indexes><index>124</index></indexes><blocks><block>29</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$10</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>124</index></indexes><blocks><block>29</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.issue31(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.examples.CustomTagPrinter.test(us.bpsm.edn.examples.CustomTagPrinter)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DefaultListFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DelegatingList</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)Ljava/lang/Object;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/DelegatingList::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>DefaultListFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DelegatingList</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced int return with 0 for us/bpsm/edn/parser/DelegatingList::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DefaultSetFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultSetFactory$1</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>DefaultSetFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultSetFactory$1</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/DefaultSetFactory$1::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$23$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>25</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::runIndented</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$23$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>30</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)</succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::printIndent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>UuidHandler.java</sourceFile><mutatedClass>us.bpsm.edn.parser.UuidHandler</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>13</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>5</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.invalidUUIDCausesException(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UuidHandler.java</sourceFile><mutatedClass>us.bpsm.edn.parser.UuidHandler</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>31</index></indexes><blocks><block>9</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedUUID(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/UuidHandler::transform</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Keyword.java</sourceFile><mutatedClass>us.bpsm.edn.Keyword$SerializationProxy</mutatedClass><mutatedMethod>readResolve</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.SerializabilityTest.testKeywordIdentity(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/Keyword$SerializationProxy::readResolve</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$22$1$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::printIndent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>DefaultVectorFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultVectorFactory$1</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/DefaultVectorFactory$1::build</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>EdnIOException.java</sourceFile><mutatedClass>us.bpsm.edn.EdnIOException</mutatedClass><mutatedMethod>getCause</mutatedMethod><methodDescription>()Ljava/io/IOException;</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>6</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/EdnIOException::getCause</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$21$1$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>17</index></indexes><blocks><block>3</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::printIndent</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$22</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/util/Set;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::withPretty</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$23</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/util/Map;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::withPretty</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Parser.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parser$Config</mutatedClass><mutatedMethod>unicodeEscapesInStringLiteralsAreAccepted</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced boolean return with false for us/bpsm/edn/parser/Parser$Config::unicodeEscapesInStringLiteralsAreAccepted</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>DefaultListFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultListFactory</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/CollectionBuilder;</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/DefaultListFactory::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$21</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/util/List;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>9</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::withPretty</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>InstantToDate.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantToDate</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/lang/Object;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parseTaggedInstant(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/InstantToDate::transform</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DefaultSetFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultSetFactory</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/CollectionBuilder;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/DefaultSetFactory::builder</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InstantToTimestamp.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantToTimestamp</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/lang/Object;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/InstantToTimestamp::transform</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='43'><sourceFile>Parsers.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Parsers$1</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>(Lus/bpsm/edn/Tag;Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests>us.bpsm.edn.parser.ScannerTest.bigIntegerRequested(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.minLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.zero(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.leadingZeroOnFloat(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFraction(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxLong(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.maxInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.decimalWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.bigIntegerAutopromote(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ScannerTest.floatWithFractionAndExponent(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.integers(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ScannerTest.minInteger(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.EdnFormatTest.decimalFloats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.floats(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.discardedTaggedValuesDoNotCallTransformer(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.SimpleParserConfigTest.test(us.bpsm.edn.examples.SimpleParserConfigTest)|us.bpsm.edn.parser.ParserTest.parseTaggedValueWithUnkownTag(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ScannerTest.sequenceOfTokens(us.bpsm.edn.parser.ScannerTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)</killingTests><succeedingTests>us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateSetElements(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableSetByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Parsers$1::transform</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$1</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with &quot;&quot; for us/bpsm/edn/parser/ParserImpl$1::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>InstantToCalendar.java</sourceFile><mutatedClass>us.bpsm.edn.parser.InstantToCalendar</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>(Lus/bpsm/edn/parser/ParsedInstant;)Ljava/lang/Object;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>5</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/InstantToCalendar::transform</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$11</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/Character;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>10</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testRoundTripCommaCharacterLiteralIssue45(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$9</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/Boolean;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><indexes><index>9</index></indexes><blocks><block>2</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests>us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>DefaultMapFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultMapFactory</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/CollectionBuilder;</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableMapByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeys(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.examples.ParseASingleMapTest.simpleUsageExample(us.bpsm.edn.examples.ParseASingleMapTest)|us.bpsm.edn.parser.ParserTest.parserShouldNotBeConfusedByUnderscoreInNonNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testSymbolAsMapKeyWithSetAsValue(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/DefaultMapFactory::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LoosePrinter.java</sourceFile><mutatedClass>us.bpsm.edn.printer.LoosePrinter</mutatedClass><mutatedMethod>newLoosePrinter</mutatedMethod><methodDescription>(Ljava/lang/Appendable;)Lus/bpsm/edn/printer/Printer;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>79</index></indexes><blocks><block>16</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/printer/LoosePrinter::newLoosePrinter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ParserImpl.java</sourceFile><mutatedClass>us.bpsm.edn.parser.ParserImpl$NamespacedMapFactory</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/CollectionBuilder;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserUnderstandsNamespacedMaps(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.parserShouldDetectDuplicateMapKeysInNamespacedMaps(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/ParserImpl$NamespacedMapFactory::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>DefaultVectorFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultVectorFactory</mutatedClass><mutatedMethod>builder</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/CollectionBuilder;</methodDescription><lineNumber>9</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>7</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableVectorByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersAutoPromoteToBigIfTooBig(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.integersParseAsLongByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfInteger(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.parser.ParserTest.canCustomizeParsingOfFloats(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.vectors(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.printer.PrinterTest.testTaggedSymbol(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.examples.PrintingExamples.printCompactly(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/DefaultVectorFactory::builder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>DefaultListFactory.java</sourceFile><mutatedClass>us.bpsm.edn.parser.DefaultListFactory$1</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>8</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.parser.ParserTest.parserShouldReturnUnmodifiableListByDefault(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.EdnFormatTest.lists(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.parseEdnSample(us.bpsm.edn.parser.ParserTest)</killingTests><succeedingTests>us.bpsm.edn.EdnFormatTest.delimetersNeedNoWhitespace(us.bpsm.edn.EdnFormatTest)|us.bpsm.edn.parser.ParserTest.issue32(us.bpsm.edn.parser.ParserTest)|us.bpsm.edn.SerializabilityTest.testSerializability(us.bpsm.edn.SerializabilityTest)|us.bpsm.edn.printer.PrinterTest.testSingleValues(us.bpsm.edn.printer.PrinterTest)|us.bpsm.edn.printer.PrinterTest.testComplexValue(us.bpsm.edn.printer.PrinterTest)</succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/DefaultListFactory$1::build</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Printers.java</sourceFile><mutatedClass>us.bpsm.edn.printer.Printers$23$1$1</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>19</index></indexes><blocks><block>4</block></blocks><killingTests>us.bpsm.edn.examples.PrintingExamples.printPretty(us.bpsm.edn.examples.PrintingExamples)|us.bpsm.edn.printer.PrinterTest.testPrettyPrinting(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printers::printIndent</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Scanners.java</sourceFile><mutatedClass>us.bpsm.edn.parser.Scanners</mutatedClass><mutatedMethod>newScanner</mutatedMethod><methodDescription>()Lus/bpsm/edn/parser/Scanner;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator</mutator><indexes><index>4</index></indexes><blocks><block>0</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>replaced return value with null for us/bpsm/edn/parser/Scanners::newScanner</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LoosePrinter.java</sourceFile><mutatedClass>us.bpsm.edn.printer.LoosePrinter$3</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/util/List;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printer$Fn::eval</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LoosePrinter.java</sourceFile><mutatedClass>us.bpsm.edn.printer.LoosePrinter$4</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printer$Fn::eval</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LoosePrinter.java</sourceFile><mutatedClass>us.bpsm.edn.printer.LoosePrinter$1</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/util/Map;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTests>us.bpsm.edn.printer.PrinterTest.testLoosePrinter(us.bpsm.edn.printer.PrinterTest)</killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printer$Fn::eval</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>LoosePrinter.java</sourceFile><mutatedClass>us.bpsm.edn.printer.LoosePrinter$2</mutatedClass><mutatedMethod>eval</mutatedMethod><methodDescription>(Ljava/util/Set;Lus/bpsm/edn/printer/Printer;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><indexes><index>12</index></indexes><blocks><block>1</block></blocks><killingTests></killingTests><succeedingTests></succeedingTests><description>removed call to us/bpsm/edn/printer/Printer$Fn::eval</description></mutation>
</mutations>
