<?xml version="1.0" encoding="UTF-8"?>
<coverage>
<block classname='com.squareup.pagerduty.incidents.TestUtil' method='map([Ljava/lang/String;)Ljava/util/Map;' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TestUtil' method='map([Ljava/lang/String;)Ljava/util/Map;' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TestUtil' method='map([Ljava/lang/String;)Ljava/util/Map;' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TestUtil' method='map([Ljava/lang/String;)Ljava/util/Map;' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventTest' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TestUtil' method='map([Ljava/lang/String;)Ljava/util/Map;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TestUtil' method='map([Ljava/lang/String;)Ljava/util/Map;' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TestUtil' method='map([Ljava/lang/String;)Ljava/util/Map;' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventTest' method='serialization()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventTest' method='serialization()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventTest' method='serialization()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventTest' method='serialization()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventTest' method='serialization()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventTest' method='serialization()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Event' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TestUtil' method='map([Ljava/lang/String;)Ljava/util/Map;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Event' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Event' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.EventTest.serialization(com.squareup.pagerduty.incidents.EventTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='closedIncidents()Ljava/util/Map;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='closedIncidents()Ljava/util/Map;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='closedIncidents()Ljava/util/Map;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='clearIncidents()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='clearIncidents()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='build()Lcom/squareup/pagerduty/incidents/Trigger;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='clearIncidents()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='clearIncidents()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='build()Lcom/squareup/pagerduty/incidents/Trigger;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='18'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='15'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='17'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='16'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='clearRemovesOpenAndClosedIncidents()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='build()Lcom/squareup/pagerduty/incidents/Resolution;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='build()Lcom/squareup/pagerduty/incidents/Resolution;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkNotNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkNotNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='withIncidentKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Trigger$Builder;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='withIncidentKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Trigger$Builder;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResult' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResult' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='openIncidents()Ljava/util/Map;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='openIncidents()Ljava/util/Map;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='openIncidents()Ljava/util/Map;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='&lt;init&gt;(Ljava/util/Random;)V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='&lt;init&gt;(Ljava/util/Random;)V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='&lt;init&gt;(Ljava/util/Random;)V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkArgument(ZLjava/lang/String;)V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='&lt;init&gt;(Ljava/util/Random;)V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkArgument(ZLjava/lang/String;)V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.clearRemovesOpenAndClosedIncidents(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='resolvingClosesIncident()V' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.resolvingClosesIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResult' method='incidentKey()Ljava/lang/String;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='15'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='16'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='17'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='18'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='19'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='20'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='21'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerCreatesIncidentKeys()V' number='22'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDuty' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerCreatesIncidentKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='15'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='17'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='16'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='22'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='19'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='18'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='21'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerPropagatesSpecifiedKeys()V' number='20'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerPropagatesSpecifiedKeys(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='18'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='17'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='16'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='15'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.FakePagerDutyTest' method='triggerReOpensResolvedIncident()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.FakePagerDutyTest.triggerReOpensResolvedIncident(com.squareup.pagerduty.incidents.FakePagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResult' method='status()Ljava/lang/String;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResult' method='message()Ljava/lang/String;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='badRequestDeserialization()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='badRequestDeserialization()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='badRequestDeserialization()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='badRequestDeserialization()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='badRequestDeserialization()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='badRequestDeserialization()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='badRequestDeserialization()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='badRequestDeserialization()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='badRequestDeserialization()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='badRequestDeserialization()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='badRequestDeserialization()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.badRequestDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='successDeserialization()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='successDeserialization()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='successDeserialization()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='successDeserialization()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='successDeserialization()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='successDeserialization()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='successDeserialization()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='successDeserialization()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='successDeserialization()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='successDeserialization()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.NotifyResultTest' method='successDeserialization()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.NotifyResultTest.successDeserialization(com.squareup.pagerduty.incidents.NotifyResultTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty' method='realPagerDuty(Ljava/lang/String;Lcom/squareup/pagerduty/incidents/EventService;)Lcom/squareup/pagerduty/incidents/PagerDuty;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty' method='realPagerDuty(Ljava/lang/String;Lcom/squareup/pagerduty/incidents/EventService;)Lcom/squareup/pagerduty/incidents/PagerDuty;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='&lt;init&gt;()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='apiKeyRequired()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='apiKeyRequired()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='apiKeyRequired()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkNotNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty' method='create(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/PagerDuty;' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='apiKeyRequired()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty' method='create(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/PagerDuty;' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='apiKeyRequired()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty' method='create(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/PagerDuty;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='apiKeyRequired()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty' method='create(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/PagerDuty;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='apiKeyRequired()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty' method='create(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/PagerDuty;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='apiKeyRequired()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty' method='create(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/PagerDuty;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='apiKeyRequired()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='&lt;init&gt;(Lcom/squareup/pagerduty/incidents/EventService;Ljava/lang/String;)V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkArgument(ZLjava/lang/String;)V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkArgument(ZLjava/lang/String;)V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='&lt;init&gt;(Lcom/squareup/pagerduty/incidents/EventService;Ljava/lang/String;)V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.RecordingEventService' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.RecordingEventService' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.RecordingEventService' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkNotNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty' method='create(Ljava/lang/String;Lretrofit2/Retrofit;)Lcom/squareup/pagerduty/incidents/PagerDuty;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Util' method='checkStringArgument(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.apiKeyRequired(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasServiceKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasServiceKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasServiceKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasServiceKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasEventType(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasServiceKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasEventType(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasEventType(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasDescription(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasEventType(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasDescription(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasDescription(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasEventType(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Event' method='withApiKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Event;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='notify(Lcom/squareup/pagerduty/incidents/Resolution;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Event' method='withApiKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Event;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.RecordingEventService' method='notify(Lcom/squareup/pagerduty/incidents/Event;)Lretrofit2/Call;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.RecordingEventService' method='notify(Lcom/squareup/pagerduty/incidents/Event;)Lretrofit2/Call;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.RecordingEventService' method='notify(Lcom/squareup/pagerduty/incidents/Event;)Lretrofit2/Call;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasNoDetails()Lcom/squareup/pagerduty/incidents/EventAssert;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasNoDetails()Lcom/squareup/pagerduty/incidents/EventAssert;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasNoDetails()Lcom/squareup/pagerduty/incidents/EventAssert;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasNoDetails()Lcom/squareup/pagerduty/incidents/EventAssert;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='assertThat(Lcom/squareup/pagerduty/incidents/Event;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='assertThat(Lcom/squareup/pagerduty/incidents/Event;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='&lt;init&gt;(Lcom/squareup/pagerduty/incidents/Event;)V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='&lt;init&gt;(Lcom/squareup/pagerduty/incidents/Event;)V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicResolve()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicResolve()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicResolve()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasDescription(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasDescription(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasIncidentKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasIncidentKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasIncidentKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasIncidentKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasIncidentKey(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicResolve()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.RecordingEventService' method='takeEvent()Lcom/squareup/pagerduty/incidents/Event;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicResolve()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicResolve()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicResolve()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicResolve()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicResolve()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicResolve()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicResolve()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.RecordingEventService' method='takeEvent()Lcom/squareup/pagerduty/incidents/Event;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicResolve(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDuty$1' method='notify(Lcom/squareup/pagerduty/incidents/Trigger;)Lcom/squareup/pagerduty/incidents/NotifyResult;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicTrigger()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicTrigger()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicTrigger()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicTrigger()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicTrigger()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicTrigger()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicTrigger()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicTrigger()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicTrigger()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicTrigger()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='basicTrigger()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.basicTrigger(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='addDetails(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Resolution$Builder;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='addDetails(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Resolution$Builder;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='addDetails(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Resolution$Builder;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='17'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='15'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='16'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='resolveWithBellsAndWhistles()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='withDescription(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Resolution$Builder;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='withDescription(Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Resolution$Builder;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='addDetails(Ljava/util/Map;)Lcom/squareup/pagerduty/incidents/Resolution$Builder;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='addDetails(Ljava/util/Map;)Lcom/squareup/pagerduty/incidents/Resolution$Builder;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Resolution$Builder' method='addDetails(Ljava/util/Map;)Lcom/squareup/pagerduty/incidents/Resolution$Builder;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasDetails([Lorg/assertj/core/data/MapEntry;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasDetails([Lorg/assertj/core/data/MapEntry;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasDetails([Lorg/assertj/core/data/MapEntry;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.EventAssert' method='hasDetails([Lorg/assertj/core/data/MapEntry;)Lcom/squareup/pagerduty/incidents/EventAssert;' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.resolveWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='addDetails(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Trigger$Builder;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='addDetails(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Trigger$Builder;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='addDetails(Ljava/lang/String;Ljava/lang/String;)Lcom/squareup/pagerduty/incidents/Trigger$Builder;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='17'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='16'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='15'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='addDetails(Ljava/util/Map;)Lcom/squareup/pagerduty/incidents/Trigger$Builder;' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.PagerDutyTest' method='triggerWithBellsAndWhistles()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='addDetails(Ljava/util/Map;)Lcom/squareup/pagerduty/incidents/Trigger$Builder;' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='addDetails(Ljava/util/Map;)Lcom/squareup/pagerduty/incidents/Trigger$Builder;' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.PagerDutyTest.triggerWithBellsAndWhistles(com.squareup.pagerduty.incidents.PagerDutyTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDescriptionRequiredIfSpecified()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDescriptionRequiredIfSpecified()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDescriptionRequiredIfSpecified()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDescriptionRequiredIfSpecified()V' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDescriptionRequiredIfSpecified()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDescriptionRequiredIfSpecified()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDescriptionRequiredIfSpecified()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDescriptionRequiredIfSpecified()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDescriptionRequiredIfSpecified()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDescriptionRequiredIfSpecified()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDescriptionRequiredIfSpecified()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDescriptionRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsNameRequiredIfSpecified()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsNameRequiredIfSpecified()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsNameRequiredIfSpecified()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsNameRequiredIfSpecified()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsNameRequiredIfSpecified()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsNameRequiredIfSpecified()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsNameRequiredIfSpecified()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsNameRequiredIfSpecified()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsNameRequiredIfSpecified()V' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsNameRequiredIfSpecified()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsNameRequiredIfSpecified()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsRequiredIfSpecified()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsRequiredIfSpecified()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsRequiredIfSpecified()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsRequiredIfSpecified()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsRequiredIfSpecified()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveDetailsRequiredIfSpecified()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveKeyRequired()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveKeyRequired()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveKeyRequired()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveKeyRequired()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveKeyRequired()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveKeyRequired()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveKeyRequired()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveKeyRequired()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.ResolutionTest' method='resolveKeyRequired()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.ResolutionTest.resolveKeyRequired(com.squareup.pagerduty.incidents.ResolutionTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.Trigger$Builder' method='&lt;init&gt;(Ljava/lang/String;)V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='2'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionLength()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionLength(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionRequired()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionRequired()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionRequired()V' number='9'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionRequired()V' number='10'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionRequired()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionRequired()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionRequired()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionRequired()V' number='3'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDescriptionRequired()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDescriptionRequired(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsNameRequiredIfSpecified()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsNameRequiredIfSpecified()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsNameRequiredIfSpecified()V' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsNameRequiredIfSpecified()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsNameRequiredIfSpecified()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsNameRequiredIfSpecified()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsNameRequiredIfSpecified()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsNameRequiredIfSpecified()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsNameRequiredIfSpecified()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsNameRequiredIfSpecified()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsNameRequiredIfSpecified()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsNameRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsRequiredIfSpecified()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsRequiredIfSpecified()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsRequiredIfSpecified()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsRequiredIfSpecified()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsRequiredIfSpecified()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerDetailsRequiredIfSpecified()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerDetailsRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerKeyRequiredIfSpecified()V' number='0'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerKeyRequiredIfSpecified()V' number='1'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerKeyRequiredIfSpecified()V' number='12'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerKeyRequiredIfSpecified()V' number='11'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerKeyRequiredIfSpecified()V' number='14'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerKeyRequiredIfSpecified()V' number='13'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerKeyRequiredIfSpecified()V' number='4'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerKeyRequiredIfSpecified()V' number='6'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerKeyRequiredIfSpecified()V' number='5'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerKeyRequiredIfSpecified()V' number='8'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
<block classname='com.squareup.pagerduty.incidents.TriggerTest' method='triggerKeyRequiredIfSpecified()V' number='7'><tests>
<test name='com.squareup.pagerduty.incidents.TriggerTest.triggerKeyRequiredIfSpecified(com.squareup.pagerduty.incidents.TriggerTest)'/>
</tests>
</block>
</coverage>
