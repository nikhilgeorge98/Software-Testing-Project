<?xml version="1.0" encoding="UTF-8"?>
<coverage>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='18'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='19'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='20'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='21'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='22'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='23'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='24'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='25'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='26'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='28'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.EdgeTransformJobValueFactory' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.edgeTransformKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='25'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='20'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='19'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='18'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='23'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='22'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='21'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.partition.mapreduce.keyvalue.IngressJobKeyValueFactory' method='getKeyClassByClassName(Ljava/lang/String;)Ljava/lang/Class;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.ingressKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.test.experimental.javassist.Foo' method='run()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.modifySelfTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.subClassTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.test.experimental.javassist.Foo' method='run()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.modifySelfTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.subClassTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.test.experimental.javassist.Foo' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.modifySelfTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.subClassTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.test.experimental.javassist.Foo' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.modifySelfTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.subClassTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.test.experimental.javassist.Foo' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.modifySelfTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.subClassTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='23'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='24'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='21'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='22'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='27'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='28'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='25'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='26'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='19'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='20'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='29'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='18'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='27'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='28'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='25'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='26'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='21'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='22'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='31'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='20'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='29'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getClassName(Ljava/lang/String;)Ljava/lang/String;' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.preprocess.mapreduce.keyvalue.PreprocessJobValueFactory' method='getValueClassByClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.TypeFactory' method='getConstructorCode(Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest.preproessKeyValFactoryTest(com.intel.hadoop.graphbuilder.test.experimental.javassist.RuntimeKeyValueTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='34'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='35'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='36'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='37'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='38'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='39'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='40'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='41'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$2' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph$CompareByVid;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$2' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph$CompareByVid;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel$1' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/util/Parallel;IILjava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel$1' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/util/Parallel;IILjava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;clinit&gt;()V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='27'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$5' method='perform(Ljava/lang/Object;I)V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$5' method='perform(Ljava/lang/Object;I)V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$5' method='perform(Ljava/lang/Object;I)V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='21'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='22'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='19'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='20'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='18'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(ILjava/util/List;Ljava/util/List;)V' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$1' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph$CompareByVid;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$1' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph$CompareByVid;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='19'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='18'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='21'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='20'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='22'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$5' method='perform(Ljava/lang/Object;I)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='28'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$5' method='perform(Ljava/lang/Object;I)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$5' method='perform(Ljava/lang/Object;I)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='&lt;init&gt;()V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='close()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='close()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='close()V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='close()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setInEdges(I)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setOwner(S)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$3' method='perform(Ljava/lang/Integer;I)V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='&lt;clinit&gt;()V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$3' method='perform(Ljava/lang/Integer;I)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$3' method='perform(Ljava/lang/Integer;I)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$3' method='perform(Ljava/lang/Integer;I)V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$3' method='perform(Ljava/lang/Integer;I)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='&lt;clinit&gt;()V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$4' method='perform(Ljava/lang/Object;I)V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$4' method='perform(Ljava/lang/Object;I)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='addEdge(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Object;)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='&lt;init&gt;()V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='addEdge(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Object;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='addEdge(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Object;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='addEdge(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Object;)V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='addEdge(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Object;)V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addVertexRecord(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addVertexRecord(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$4' method='perform(Ljava/lang/Object;I)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$4' method='perform(Ljava/lang/Object;I)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setVdata(Ljava/lang/Object;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='88'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='89'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='90'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='91'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='19'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='18'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='27'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='26'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='25'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='24'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='23'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='22'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='21'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='20'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='32'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='31'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='30'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='29'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='counting_sort(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='28'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='32'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='33'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='34'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='28'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='29'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='30'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='31'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='24'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='25'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='26'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='27'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='52'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='53'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='54'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='55'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='21'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='48'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='49'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='50'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='51'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='44'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='45'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='46'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='47'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='20'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='19'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='60'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='61'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='62'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='63'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='56'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='&lt;init&gt;()V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setMirrors(Ljava/util/BitSet;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='57'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='&lt;init&gt;()V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='58'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='59'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='84'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$5' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='85'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='86'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='87'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='80'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='81'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='82'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='83'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='76'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='77'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='78'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='79'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='73'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='74'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='75'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$5' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Ljava/util/ArrayList;Ljava/util/ArrayList;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$2' method='perform(Ljava/util/List;I)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$2' method='perform(Ljava/util/List;I)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel$1' method='run()V' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel$1' method='run()V' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$4' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Ljava/util/ArrayList;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel$1' method='run()V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$4' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Ljava/util/ArrayList;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel$1' method='run()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$CompareByVid' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Ljava/util/ArrayList;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setOutEdges(I)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel$1' method='run()V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$CompareByVid' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Ljava/util/ArrayList;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel$1' method='run()V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel$1' method='run()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel$1' method='run()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='20'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='21'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='22'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='23'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='18'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='19'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$3' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Ljava/util/ArrayList;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$3' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/GLGraph;Ljava/util/ArrayList;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$CompareByVid' method='compare(Ljava/lang/Integer;Ljava/lang/Integer;)I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$CompareByVid' method='compare(Ljava/lang/Integer;Ljava/lang/Integer;)I' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$CompareByVid' method='compare(Ljava/lang/Integer;Ljava/lang/Integer;)I' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$CompareByVid' method='compare(Ljava/lang/Integer;Ljava/lang/Integer;)I' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$CompareByVid' method='compare(Ljava/lang/Integer;Ljava/lang/Integer;)I' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$CompareByVid' method='compare(Ljava/lang/Integer;Ljava/lang/Integer;)I' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='18'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='19'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='20'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='21'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='22'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='23'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='24'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='25'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='26'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='27'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='28'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='29'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='30'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='&lt;init&gt;(Ljava/lang/Object;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='31'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='&lt;init&gt;(Ljava/lang/Object;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testSort(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='32'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='33'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$1' method='perform(Ljava/util/List;I)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph$1' method='perform(Ljava/util/List;I)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='size()I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='size()I' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeListStorage' method='inplace_shuffle(Ljava/util/List;)V' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.buildGraphExample(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='numVertices()I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='numEdges()I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList' method='iterator()Ljava/util/Iterator;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList' method='iterator()Ljava/util/Iterator;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='getRowIndex()Ljava/util/List;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='lvid(Ljava/lang/Object;)I' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='lvid(Ljava/lang/Object;)I' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='lvid(Ljava/lang/Object;)I' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='lvid(Ljava/lang/Object;)I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='lvid(Ljava/lang/Object;)I' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='lvid(Ljava/lang/Object;)I' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType' method='source()I' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType' method='source()I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType' method='source()I' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType' method='source()I' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='numVertices()I' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='numVertices()I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType' method='&lt;init&gt;(IIILcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeType$DIR;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType' method='&lt;init&gt;(IIILcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeType$DIR;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList$EdgeIterator' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeList;Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeList;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList$EdgeIterator' method='&lt;init&gt;(Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeList;Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeList;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList' method='&lt;init&gt;(ILcom/intel/hadoop/graphbuilder/graph/glgraph/SparseGraphStruct;Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeType$DIR;)V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList' method='isEmpty()Z' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList' method='&lt;init&gt;(ILcom/intel/hadoop/graphbuilder/graph/glgraph/SparseGraphStruct;Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeType$DIR;)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList' method='isEmpty()Z' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList' method='&lt;init&gt;(ILcom/intel/hadoop/graphbuilder/graph/glgraph/SparseGraphStruct;Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeType$DIR;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList' method='&lt;init&gt;(ILcom/intel/hadoop/graphbuilder/graph/glgraph/SparseGraphStruct;Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeType$DIR;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList' method='isEmpty()Z' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='csc()Lcom/intel/hadoop/graphbuilder/graph/glgraph/SparseGraphStruct;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='getColIndex()Ljava/util/List;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType$DIR' method='&lt;init&gt;(Ljava/lang/String;I)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType$DIR' method='&lt;init&gt;(Ljava/lang/String;I)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='numOutEdges(I)I' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='numOutEdges(I)I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='numOutEdges(I)I' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='numInEdges(I)I' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList' method='size()I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='numInEdges(I)I' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='numInEdges(I)I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='csr()Lcom/intel/hadoop/graphbuilder/graph/glgraph/SparseGraphStruct;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList$EdgeIterator' method='next()Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeType;' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList$EdgeIterator' method='next()Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeType;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList$EdgeIterator' method='next()Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeType;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList$EdgeIterator' method='next()Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeType;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='numEdges()I' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='numEdges()I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList$EdgeIterator' method='next()Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeType;' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='inEdges(I)Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeList;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='inEdges(I)Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeList;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='begin(I)I' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='begin(I)I' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='begin(I)I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='end(I)I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType' method='target()I' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType' method='target()I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType' method='target()I' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType' method='target()I' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='outEdges(I)Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeList;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='finalize()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.GLGraph' method='outEdges(I)Lcom/intel/hadoop/graphbuilder/graph/glgraph/EdgeList;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType$DIR' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType$DIR' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType$DIR' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeType$DIR' method='&lt;clinit&gt;()V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList$EdgeIterator' method='hasNext()Z' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList$EdgeIterator' method='hasNext()Z' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList$EdgeIterator' method='hasNext()Z' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.EdgeList$EdgeIterator' method='hasNext()Z' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.GLGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.GLGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='&lt;init&gt;()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='&lt;init&gt;()V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='&lt;init&gt;()V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='numEdges()I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testEmptyGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='19'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='edataWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='outEdgeTargetIds(Ljava/lang/Object;)Ljava/util/List;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='18'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='outEdgeData(Ljava/lang/Object;)Ljava/util/List;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='outEdgeData(Ljava/lang/Object;)Ljava/util/List;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='structWriter(Lcom/intel/hadoop/graphbuilder/graph/Graph;)Ljava/io/StringWriter;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='outEdgeTargetIds(Ljava/lang/Object;)Ljava/util/List;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdges(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdges(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='vertices()Ljava/util/List;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdges(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdges(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='vertices()Ljava/util/List;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdges(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='vertices()Ljava/util/List;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdges(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdges(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdges(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdges(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleGraph' method='addEdge(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testSmallGraph(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.simplegraph.SimpleJsonFormatter' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest.testGraphFormatter(com.intel.hadoop.graphbuilder.test.graph.SimpleGraphTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(I)V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(I)V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(I)V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(I)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(I)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.glgraph.SparseGraphStruct' method='&lt;init&gt;(I)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest.test(com.intel.hadoop.graphbuilder.test.graph.SparseGraphStructTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.IntType' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.IntType' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.IntType' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='outEdges()I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='vid()Ljava/lang/Object;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.IntType' method='&lt;init&gt;(I)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.IntType' method='&lt;init&gt;(I)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setMirrorsFromList(Ljava/util/List;I)V' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setMirrorsFromList(Ljava/util/List;I)V' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setMirrorsFromList(Ljava/util/List;I)V' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setMirrorsFromList(Ljava/util/List;I)V' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setMirrorsFromList(Ljava/util/List;I)V' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setMirrorsFromList(Ljava/util/List;I)V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='vdata()Ljava/lang/Object;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setMirrorsFromList(Ljava/util/List;I)V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setMirrorsFromList(Ljava/util/List;I)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setMirrorsFromList(Ljava/util/List;I)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='toString()Ljava/lang/String;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='toString()Ljava/lang/String;' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='toString()Ljava/lang/String;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='&lt;init&gt;()V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='toString()Ljava/lang/String;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='&lt;init&gt;()V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='mirrorList()Ljava/util/List;' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='mirrorList()Ljava/util/List;' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='mirrorList()Ljava/util/List;' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='mirrorList()Ljava/util/List;' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='mirrorList()Ljava/util/List;' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='inEdges()I' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='mirrorList()Ljava/util/List;' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='mirrorList()Ljava/util/List;' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='mirrorList()Ljava/util/List;' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='mirrorList()Ljava/util/List;' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='mirrorList()Ljava/util/List;' number='3'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='mirrorList()Ljava/util/List;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='8'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='7'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.IntType' method='toJSONString()Ljava/lang/String;' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='6'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='setVid(Ljava/lang/Object;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='12'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='11'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='10'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='9'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='16'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='15'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='14'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.VertexRecord' method='owner()S' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='13'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.IntType' method='toJSONString()Ljava/lang/String;' number='2'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='20'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.IntType' method='toJSONString()Ljava/lang/String;' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='18'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.graph.JsonVrecordFormatter' method='vrecordWriter(Lcom/intel/hadoop/graphbuilder/graph/VertexRecord;)Ljava/io/StringWriter;' number='17'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testDecodeInt(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.StringType' method='&lt;init&gt;(Ljava/lang/String;)V' number='1'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.types.StringType' method='&lt;init&gt;(Ljava/lang/String;)V' number='0'><tests>
<test name='com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest.testEncodeString(com.intel.hadoop.graphbuilder.test.graph.VertexRecordTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='5'><tests>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
<block classname='com.intel.hadoop.graphbuilder.util.Parallel' method='For(Ljava/util/List;Lcom/intel/hadoop/graphbuilder/util/Parallel$Operation;)V' number='4'><tests>
<test name='com.intel.hadoop.graphbuilder.test.util.ParallelTest.testIndexOp(com.intel.hadoop.graphbuilder.test.util.ParallelTest)'/>
</tests>
</block>
</coverage>
