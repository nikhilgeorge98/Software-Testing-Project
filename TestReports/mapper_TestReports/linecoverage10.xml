<?xml version="1.0" encoding="UTF-8"?>
<coverage>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeyGenerator(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeyGenerator(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeyGenerator(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeyGenerator(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeyGenerator(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getJdbcType()Lorg/apache/ibatis/type/JdbcType;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='beforeTest()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='beforeTest()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='hashCode()I' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='beforeTest()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='hashCode()I' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='beforeTest()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='hashCode()I' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='hashCode()I' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='getJavaType()Ljava/lang/Class;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='isEnumAsSimpleType()Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='isUseJavaType()Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='isId()Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='testColumn()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='registerSimpleTypeSilence(Ljava/lang/String;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='registerSimpleTypeSilence(Ljava/lang/String;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='registerSimpleTypeSilence(Ljava/lang/String;)V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='registerSimpleTypeSilence(Ljava/lang/String;)V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.ORDER' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.ORDER' method='&lt;clinit&gt;()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.ORDER' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.ORDER' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='&lt;init&gt;()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setName(Ljava/lang/String;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setUseJavaType(Z)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.Style' method='&lt;clinit&gt;()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.Style' method='&lt;clinit&gt;()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.Style' method='&lt;clinit&gt;()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.Style' method='&lt;clinit&gt;()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.Style' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.Style' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.Style' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='getName()Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='initEntityNameMap(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='initEntityNameMap(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='initEntityNameMap(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='initEntityNameMap(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='initEntityNameMap(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='_getFields(Ljava/lang/Class;Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='values()[Ltk/mybatis/mapper/code/IdentityDialect;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='values()[Ltk/mybatis/mapper/code/IdentityDialect;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnEqualsHolder()Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnEqualsHolder()Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder()Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder()Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setProperty(Ljava/lang/String;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='48'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='49'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='50'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='51'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='52'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='63'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='64'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='65'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='56'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='57'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='58'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='59'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='60'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='61'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='62'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='isAnnotationPresent(Ljava/lang/Class;)Z' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='isAnnotationPresent(Ljava/lang/Class;)Z' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='isAnnotationPresent(Ljava/lang/Class;)Z' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='isAnnotationPresent(Ljava/lang/Class;)Z' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='isAnnotationPresent(Ljava/lang/Class;)Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='isSimpleType(Ljava/lang/Class;)Z' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='isAnnotationPresent(Ljava/lang/Class;)Z' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='isAnnotationPresent(Ljava/lang/Class;)Z' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='isAnnotationPresent(Ljava/lang/Class;)Z' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.SimpleTypeUtil' method='isSimpleType(Ljava/lang/Class;)Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isNotEmpty(Ljava/lang/String;)Z' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getProperty()Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isNotEmpty(Ljava/lang/String;)Z' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='&lt;init&gt;()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.ORDER' method='&lt;init&gt;(Ljava/lang/String;I)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isNotEmpty(Ljava/lang/String;)Z' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.ORDER' method='&lt;init&gt;(Ljava/lang/String;I)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isNotEmpty(Ljava/lang/String;)Z' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isNotEmpty(Ljava/lang/String;)Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setJavaType(Ljava/lang/Class;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='getStyle()Ltk/mybatis/mapper/code/Style;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='getStyle()Ltk/mybatis/mapper/code/Style;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='getStyle()Ltk/mybatis/mapper/code/Style;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getTypeHandler()Ljava/lang/Class;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='initPropertyMap()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.Style' method='values()[Ltk/mybatis/mapper/code/Style;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.Style' method='values()[Ltk/mybatis/mapper/code/Style;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setEntityClassPKColumns(Ljava/util/LinkedHashSet;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setEntityClassColumns(Ljava/util/LinkedHashSet;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='isUseSimpleType()Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getJavaType()Ljava/lang/Class;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getEntityClassColumns()Ljava/util/LinkedHashSet;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='getWrapKeyword()Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getEntityClassPKColumns()Ljava/util/LinkedHashSet;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;init&gt;(Ljava/lang/String;ILjava/lang/String;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='&lt;init&gt;(Ljava/lang/String;ILjava/lang/String;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='getEntityTable(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityTable;' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processOrderBy(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processOrderBy(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isEmpty(Ljava/lang/String;)Z' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processOrderBy(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processOrderBy(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isEmpty(Ljava/lang/String;)Z' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isEmpty(Ljava/lang/String;)Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isEmpty(Ljava/lang/String;)Z' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isEmpty(Ljava/lang/String;)Z' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setUpdatable(Z)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setEntityField(Ltk/mybatis/mapper/entity/EntityField;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setColumn(Ljava/lang/String;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnEqualsHolder(Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnEqualsHolder(Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnEqualsHolder(Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='isEnableMethodAnnotation()Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processOrderBy(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processOrderBy(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnEqualsHolder(Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnEqualsHolder(Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processOrderBy(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnEqualsHolder(Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnEqualsHolder(Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='&lt;init&gt;(Ltk/mybatis/mapper/entity/EntityTable;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='&lt;init&gt;(Ltk/mybatis/mapper/entity/EntityTable;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='containFiled(Ljava/util/List;Ljava/lang/String;)Z' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='containFiled(Ljava/util/List;Ljava/lang/String;)Z' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='58'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='65'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='64'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.Style' method='&lt;init&gt;(Ljava/lang/String;I)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='containFiled(Ljava/util/List;Ljava/lang/String;)Z' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='53'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='containFiled(Ljava/util/List;Ljava/lang/String;)Z' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.Style' method='&lt;init&gt;(Ljava/lang/String;I)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='52'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='containFiled(Ljava/util/List;Ljava/lang/String;)Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='51'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='containFiled(Ljava/util/List;Ljava/lang/String;)Z' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='57'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='containFiled(Ljava/util/List;Ljava/lang/String;)Z' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='56'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='containFiled(Ljava/util/List;Ljava/lang/String;)Z' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='55'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper' method='containFiled(Ljava/util/List;Ljava/lang/String;)Z' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='54'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='69'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='68'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='67'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='66'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='73'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='&lt;init&gt;(Ljava/lang/Class;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='&lt;init&gt;(Ljava/lang/Class;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='setStyle(Ltk/mybatis/mapper/code/Style;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='getEntityTable(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityTable;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='getEntityTable(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityTable;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.ORDER' method='values()[Ltk/mybatis/mapper/code/ORDER;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setInsertable(Z)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.ORDER' method='values()[Ltk/mybatis/mapper/code/ORDER;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumn()Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTest.testColumn(tk.mybatis.mapper.annotation.ColumnTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setJdbcType(Lorg/apache/ibatis/type/JdbcType;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setTypeHandler(Ljava/lang/Class;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setBlob(Z)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testAll()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getInstance(Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/ibatis/type/TypeHandler;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getInstance(Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/ibatis/type/TypeHandler;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getInstance(Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/ibatis/type/TypeHandler;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getInstance(Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/ibatis/type/TypeHandler;' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getInstance(Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/ibatis/type/TypeHandler;' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getInstance(Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/ibatis/type/TypeHandler;' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getColumnHolder(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='beforeTest()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='beforeTest()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='beforeTest()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='beforeTest()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testAll(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testColumn()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testColumn(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest$UserEnum' method='values()[Ltk/mybatis/mapper/annotation/ColumnTypeTest$UserEnum;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest$UserEnum' method='values()[Ltk/mybatis/mapper/annotation/ColumnTypeTest$UserEnum;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest$UserEnum' method='&lt;init&gt;(Ljava/lang/String;I)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest$UserEnum' method='&lt;init&gt;(Ljava/lang/String;I)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getInstance(Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/ibatis/type/TypeHandler;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getInstance(Ljava/lang/Class;Ljava/lang/Class;)Lorg/apache/ibatis/type/TypeHandler;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testEnumOrdinalTypeHandler()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest$UserEnum' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest$UserEnum' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest$UserEnum' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testEnumOrdinalTypeHandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='48'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='49'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeBlob()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeBlob(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='49'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='48'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testJdbcTypeVarchar()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testJdbcTypeVarchar(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.ColumnTypeTest' method='testTypehandler()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.ColumnTypeTest.testTypehandler(tk.mybatis.mapper.annotation.ColumnTypeTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='beforeTest()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='beforeTest()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='beforeTest()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='beforeTest()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Z)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Z)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setId(Z)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='getColumns(Ljava/lang/Class;)Ljava/util/Set;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='getColumns(Ljava/lang/Class;)Ljava/util/Set;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testCompositeKeys()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='getColumns(Ljava/lang/Class;)Ljava/util/Set;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getResultMap(Lorg/apache/ibatis/session/Configuration;)Lorg/apache/ibatis/mapping/ResultMap;' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='hasLogicDeleteColumn(Ljava/lang/Class;)Z' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='hasLogicDeleteColumn(Ljava/lang/Class;)Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getEntityField()Ltk/mybatis/mapper/entity/EntityField;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='hasLogicDeleteColumn(Ljava/lang/Class;)Z' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='72'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='71'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='70'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='getPKColumns(Ljava/lang/Class;)Ljava/util/Set;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='getPKColumns(Ljava/lang/Class;)Ljava/util/Set;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.EntityHelper' method='getPKColumns(Ljava/lang/Class;)Ljava/util/Set;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processField(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/Config;Ltk/mybatis/mapper/code/Style;)V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testCompositeKeys(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.IdTest' method='testSingleId()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.IdTest.testSingleId(tk.mybatis.mapper.annotation.IdTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeyGenerator(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeyGenerator(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeyGenerator(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='isIdentity()Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='beforeTest()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='beforeTest()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='beforeTest()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='beforeTest()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setGenerator(Ljava/lang/String;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getGenerator()Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='64'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='hashCode()I' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setIdentity(Z)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setKeyProperties(Ljava/lang/String;)V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setKeyProperties(Ljava/lang/String;)V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setKeyProperties(Ljava/lang/String;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setKeyProperties(Ljava/lang/String;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setKeyColumns(Ljava/lang/String;)V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setKeyColumns(Ljava/lang/String;)V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setKeyColumns(Ljava/lang/String;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setKeyColumns(Ljava/lang/String;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setKeyColumns(Ljava/lang/String;)V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setKeyProperties(Ljava/lang/String;)V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='setOrder(Ltk/mybatis/mapper/code/ORDER;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='getOrder()Ltk/mybatis/mapper/code/ORDER;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testAll2()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.code.IdentityDialect' method='getIdentityRetrievalStatement()Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testAll2(tk.mybatis.mapper.annotation.KeySqlTest)'/>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testDialect()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testDialect(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testSql()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeySql(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ltk/mybatis/mapper/annotation/KeySql;)V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testSql(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.KeySqlTest' method='testUseGeneratedKeys()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.KeySqlTest.testUseGeneratedKeys(tk.mybatis.mapper.annotation.KeySqlTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='49'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhump()V' number='48'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isUppercaseAlpha(C)Z' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsUppercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isUppercaseAlpha(C)Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsUppercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isUppercaseAlpha(C)Z' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsUppercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isUppercaseAlpha(C)Z' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsUppercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='getName()Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='toLowerAscii(C)C' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='toLowerAscii(C)C' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='toLowerAscii(C)C' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='toLowerAscii(C)C' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='camelhumpToUnderline(Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='beforeTest()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='beforeTest()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='beforeTest()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='beforeTest()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhump(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='49'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='48'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndLowercase()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='49'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='48'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testCamelhumpAndUppercase()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testCamelhumpAndUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='49'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='48'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testLowercase()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testLowercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='48'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='49'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testNormal()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testNormal(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='41'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='37'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='40'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='49'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='46'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='48'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='47'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='26'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='25'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='28'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='27'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='22'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='24'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='23'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='34'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='33'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='36'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='35'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='30'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='29'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='32'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='31'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.NameStyleTest' method='testUppercase()V' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='convertByStyle(Ljava/lang/String;Ltk/mybatis/mapper/code/Style;)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.NameStyleTest.testUppercase(tk.mybatis.mapper.annotation.NameStyleTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperTemplate' method='&lt;init&gt;(Ljava/lang/Class;Ltk/mybatis/mapper/mapperhelper/MapperHelper;)V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='beforeTest()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperTemplate' method='&lt;init&gt;(Ljava/lang/Class;Ltk/mybatis/mapper/mapperhelper/MapperHelper;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='beforeTest()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperTemplate' method='&lt;init&gt;(Ljava/lang/Class;Ltk/mybatis/mapper/mapperhelper/MapperHelper;)V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.provider.EmptyProvider' method='&lt;init&gt;(Ljava/lang/Class;Ltk/mybatis/mapper/mapperhelper/MapperHelper;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='beforeTest()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.provider.EmptyProvider' method='&lt;init&gt;(Ljava/lang/Class;Ltk/mybatis/mapper/mapperhelper/MapperHelper;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='beforeTest()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='&lt;init&gt;()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='44'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='registerMapper(Ljava/lang/Class;)V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='45'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='registerMapper(Ljava/lang/Class;)V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='&lt;init&gt;()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='42'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='&lt;init&gt;()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='43'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperTemplate' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='38'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='registerMapper(Ljava/lang/Class;)V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperTemplate' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='39'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='registerMapper(Ljava/lang/Class;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='registerMapper(Ljava/lang/Class;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='registerMapper(Ljava/lang/Class;)V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='registerMapper(Ljava/lang/Class;)V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='registerMapper(Ljava/lang/Class;)V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='registerMapper(Ljava/lang/Class;)V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='registerMapper(Ljava/lang/Class;)V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='56'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='57'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperTemplate' method='&lt;init&gt;(Ljava/lang/Class;Ltk/mybatis/mapper/mapperhelper/MapperHelper;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='hasRegisterMapper(Ljava/lang/Class;)Z' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='80'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='81'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='79'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testHashRegisterMapper()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testHashRegisterMapper()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testHashRegisterMapper()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testHashRegisterMapper()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='fromMapperClass(Ljava/lang/Class;)Ltk/mybatis/mapper/mapperhelper/MapperTemplate;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='isExtendCommonMapper(Ljava/lang/Class;)Z' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='isExtendCommonMapper(Ljava/lang/Class;)Z' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='isExtendCommonMapper(Ljava/lang/Class;)Z' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='isExtendCommonMapper(Ljava/lang/Class;)Z' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='isExtendCommonMapper(Ljava/lang/Class;)Z' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.MapperHelper' method='isExtendCommonMapper(Ljava/lang/Class;)Z' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testHashRegisterMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testRoleMapper()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testRoleMapper()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testRoleMapper()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testRoleMapper()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testRoleMapper2()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testRoleMapper2()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testRoleMapper2()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.RegisterMapperTest' method='testRoleMapper2()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.RegisterMapperTest.testRoleMapper2(tk.mybatis.mapper.annotation.RegisterMapperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setTable(Ljavax/persistence/Table;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setTable(Ljavax/persistence/Table;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setTable(Ljavax/persistence/Table;)V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityTable' method='setTable(Ljavax/persistence/Table;)V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.TableTest' method='testColumn()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.TableTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.TableTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='resolveEntity(Ljava/lang/Class;Ltk/mybatis/mapper/entity/Config;)Ltk/mybatis/mapper/entity/EntityTable;' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.TableTest' method='beforeTest()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.TableTest' method='beforeTest()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.TableTest' method='beforeTest()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.TableTest' method='testColumn()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.TableTest' method='testColumn()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.TableTest' method='testColumn()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.TableTest' method='testColumn()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.TableTest' method='testColumn()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.TableTest.testColumn(tk.mybatis.mapper.annotation.TableTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='beforeTest()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='beforeTest()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='beforeTest()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='beforeTest()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersion()V' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersion(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.version.VersionException' method='&lt;init&gt;(Ljava/lang/String;)V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.version.VersionException' method='&lt;init&gt;(Ljava/lang/String;)V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='10'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='9'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='12'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='11'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='14'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='13'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='16'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='15'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='8'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='7'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersionError()V' number='0'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersionError()V' number='1'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersionError()V' number='2'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.annotation.VersionTest' method='testVersionError()V' number='3'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='18'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='17'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='20'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='19'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereVersion(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='21'><tests>
<test name='tk.mybatis.mapper.annotation.VersionTest.testVersionError(tk.mybatis.mapper.annotation.VersionTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='26'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='27'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='28'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='setJavaType(Ljava/lang/Class;)V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='10'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='24'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='25'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='8'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ljava/lang/String;Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='9'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.Config' method='isNotEmpty()Z' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;Z)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;Z)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='10'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='11'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='12'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='selectAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='selectAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='selectAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='selectAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='selectAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='selectAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='selectAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='10'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='9'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='8'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityField' method='&lt;init&gt;(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;)V' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='13'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='14'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='15'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='16'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='17'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='18'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getFields(Ljava/lang/Class;)Ljava/util/List;' number='19'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='beforeTest()V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest$AddressHandler' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest$AddressHandler' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest$AddressHandler' method='&lt;init&gt;()V' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='beforeTest()V' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='beforeTest()V' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='beforeTest()V' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getDynamicTableName(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='13'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='11'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='12'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getDynamicTableName(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelper$Jdk8FieldHelper' method='getProperties(Ljava/lang/Class;)Ljava/util/List;' number='10'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getDynamicTableName(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='17'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='16'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='15'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='14'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='21'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='20'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='19'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='18'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='11'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='33'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='32'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='31'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='23'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='22'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='27'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='10'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='11'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='12'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='13'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='8'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='9'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getAllColumns(Ljava/lang/Class;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='28'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='29'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='30'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='31'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='24'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='25'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='26'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='27'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='20'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='21'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='22'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='23'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='16'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='17'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='18'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='19'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='12'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='13'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='14'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='15'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='8'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='9'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='10'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='11'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='4'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='5'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='44'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='40'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='41'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='42'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='43'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='36'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='37'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='38'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='39'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='32'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='33'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='34'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.ComplexEntityTest' method='test()V' number='35'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='fromTable(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='fromTable(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='fromTable(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='fromTable(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='fromTable(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='fromTable(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='fromTable(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getIfNotNull(Ltk/mybatis/mapper/entity/EntityColumn;Ljava/lang/String;Z)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.ComplexEntityTest.test(tk.mybatis.mapper.mapperhelper.ComplexEntityTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testComplex()V' number='9'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testComplex()V' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testComplex()V' number='4'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testComplex()V' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testComplex()V' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testComplex()V' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testComplex()V' number='8'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testComplex()V' number='5'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testComplex()V' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testComplex()V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testComplex(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testUser()V' number='9'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testUser()V' number='8'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testUser()V' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testUser()V' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testUser()V' number='5'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testUser()V' number='4'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testUser()V' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testUser()V' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testUser()V' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.FieldHelperTest' method='testUser()V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.FieldHelperTest.testUser(tk.mybatis.mapper.mapperhelper.FieldHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeyGenerator(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processKeyGenerator(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityField;Ltk/mybatis/mapper/entity/EntityColumn;)V' number='8'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processGeneratedValue(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ljavax/persistence/GeneratedValue;)V' number='34'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processGeneratedValue(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ljavax/persistence/GeneratedValue;)V' number='15'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processGeneratedValue(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ljavax/persistence/GeneratedValue;)V' number='13'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processGeneratedValue(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ljavax/persistence/GeneratedValue;)V' number='14'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processGeneratedValue(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ljavax/persistence/GeneratedValue;)V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processGeneratedValue(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ljavax/persistence/GeneratedValue;)V' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processGeneratedValue(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ljavax/persistence/GeneratedValue;)V' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processGeneratedValue(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ljavax/persistence/GeneratedValue;)V' number='11'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processGeneratedValue(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ljavax/persistence/GeneratedValue;)V' number='12'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.resolve.DefaultEntityResolve' method='processGeneratedValue(Ltk/mybatis/mapper/entity/EntityTable;Ltk/mybatis/mapper/entity/EntityColumn;Ljavax/persistence/GeneratedValue;)V' number='10'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ljava/lang/Class;Z)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ljava/lang/Class;Z)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ljava/lang/Class;Z)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ljava/lang/Class;Z)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='testLogicDeleteSql()V' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='testLogicDeleteSql()V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='testLogicDeleteSql()V' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='testLogicDeleteSql()V' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='beforeTest()V' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='beforeTest()V' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='beforeTest()V' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='beforeTest()V' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='testLogicDeleteSql()V' number='9'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='testLogicDeleteSql()V' number='8'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='testLogicDeleteSql()V' number='10'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='testLogicDeleteSql()V' number='5'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='testLogicDeleteSql()V' number='4'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='testLogicDeleteSql()V' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelperTest' method='testLogicDeleteSql()V' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereLogicDelete(Ljava/lang/Class;Z)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereLogicDelete(Ljava/lang/Class;Z)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.entity.EntityColumn' method='isUpdatable()Z' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereLogicDelete(Ljava/lang/Class;Z)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereLogicDelete(Ljava/lang/Class;Z)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereLogicDelete(Ljava/lang/Class;Z)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='20'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='19'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='13'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='12'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='wherePKColumns(Ljava/lang/Class;Ljava/lang/String;Z)Ljava/lang/String;' number='18'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='30'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='29'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereAllIfColumns(Ljava/lang/Class;ZZ)Ljava/lang/String;' number='28'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='10'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='11'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='8'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='9'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereLogicDelete(Ljava/lang/Class;Z)Ljava/lang/String;' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='whereLogicDelete(Ljava/lang/Class;Z)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='logicDeleteColumnEqualsValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeleteColumn(Ljava/lang/Class;)Ltk/mybatis/mapper/entity/EntityColumn;' number='15'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='hasLogicDeleteColumn(Ljava/lang/Class;)Z' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='31'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='30'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='33'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='32'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='34'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='3'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='5'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='4'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='7'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='6'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='8'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='19'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='18'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='21'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='20'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='29'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeletedValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)I' number='1'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeletedValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)I' number='0'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeletedValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)I' number='2'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeletedValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)I' number='16'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeletedValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)I' number='15'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeletedValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)I' number='14'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeletedValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)I' number='13'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeletedValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)I' number='12'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeletedValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)I' number='11'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='getLogicDeletedValue(Ltk/mybatis/mapper/entity/EntityColumn;Z)I' number='10'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='63'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='62'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='65'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='64'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='67'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='66'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='77'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='76'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='79'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='78'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='81'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='80'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='83'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='82'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='85'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='84'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='87'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.mapperhelper.SqlHelper' method='updateSetColumns(Ljava/lang/Class;Ljava/lang/String;ZZ)Ljava/lang/String;' number='86'><tests>
<test name='tk.mybatis.mapper.mapperhelper.SqlHelperTest.testLogicDeleteSql(tk.mybatis.mapper.mapperhelper.SqlHelperTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testCamelhumpToUnderline()V' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testCamelhumpToUnderline()V' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testCamelhumpToUnderline()V' number='4'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testCamelhumpToUnderline()V' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testCamelhumpToUnderline()V' number='3'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsLowercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsUppercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testCamelhumpToUnderline(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsLowercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsUppercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='7'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='6'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='9'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='8'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='3'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='5'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='4'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='11'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='10'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testConvertByStyle()V' number='12'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testConvertByStyle(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsEmpty()V' number='6'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsEmpty()V' number='7'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsEmpty()V' number='8'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsEmpty()V' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsEmpty()V' number='3'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsEmpty()V' number='4'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsEmpty()V' number='5'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsEmpty()V' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsEmpty()V' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isLowercaseAlpha(C)Z' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsLowercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsLowercaseAlpha()V' number='4'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsLowercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsLowercaseAlpha()V' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsLowercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsLowercaseAlpha()V' number='3'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsLowercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsLowercaseAlpha()V' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsLowercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsLowercaseAlpha()V' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsLowercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isLowercaseAlpha(C)Z' number='3'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsLowercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isLowercaseAlpha(C)Z' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsLowercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='isLowercaseAlpha(C)Z' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsLowercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsNotEmpty()V' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsNotEmpty()V' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsNotEmpty()V' number='3'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsNotEmpty()V' number='4'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsNotEmpty()V' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsNotEmpty()V' number='5'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsNotEmpty()V' number='6'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsNotEmpty()V' number='7'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsNotEmpty()V' number='8'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsNotEmpty(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsUppercaseAlpha()V' number='3'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsUppercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsUppercaseAlpha()V' number='4'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsUppercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsUppercaseAlpha()V' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsUppercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsUppercaseAlpha()V' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsUppercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testIsUppercaseAlpha()V' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testIsUppercaseAlpha(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testToLowerAscii()V' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testToLowerAscii()V' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testToLowerAscii()V' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testToLowerAscii()V' number='3'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testToLowerAscii()V' number='4'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToLowerAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='toUpperAscii(C)C' number='3'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='toUpperAscii(C)C' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='toUpperAscii(C)C' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='toUpperAscii(C)C' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testToUpperAscii()V' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testToUpperAscii()V' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testToUpperAscii()V' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testToUpperAscii()V' number='4'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testToUpperAscii()V' number='3'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testToUpperAscii(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='13'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testUnderlineToCamelhump()V' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='12'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testUnderlineToCamelhump()V' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='11'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='10'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='21'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='20'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='19'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='18'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='17'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testUnderlineToCamelhump()V' number='4'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='16'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='15'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testUnderlineToCamelhump()V' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='14'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtilTest' method='testUnderlineToCamelhump()V' number='3'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='2'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='1'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
<block classname='tk.mybatis.mapper.util.StringUtil' method='underlineToCamelhump(Ljava/lang/String;)Ljava/lang/String;' number='0'><tests>
<test name='tk.mybatis.mapper.util.StringUtilTest.testUnderlineToCamelhump(tk.mybatis.mapper.util.StringUtilTest)'/>
</tests>
</block>
</coverage>
